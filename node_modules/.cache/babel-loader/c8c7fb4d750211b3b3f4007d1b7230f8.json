{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Projects/sd-09-project-recipes-app/src/components/SearchBar.js\";\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router';\nimport { AppContext } from '../context/AppContext';\nimport { getDrinkResults, getFoodResults } from '../services';\n\nconst SearchBar = ({\n  title\n}) => {\n  const baseSearchBar = {\n    searchInput: '',\n    radioOn: ''\n  };\n  const [searchState, setSearchState] = useState(baseSearchBar);\n  const [showAlertLetterRadio, setShowAlertLetter] = useState(false);\n  const [pathToGo, setPath] = useState(null);\n  const {\n    setFoodApiResults,\n    setDrinksApiResults,\n    foodApiResults,\n    drinksApiResults\n  } = useContext(AppContext);\n\n  const handleClick = async () => {\n    const {\n      searchInput,\n      radioOn\n    } = searchState;\n    let results;\n    const shouldAlert = searchInput.length > 1 && radioOn === 'firstLetterRadio';\n    if (shouldAlert) setShowAlertLetter(true);\n\n    if (title === 'Comidas' && !shouldAlert) {\n      results = await getFoodResults(radioOn, searchInput);\n      setFoodApiResults(results); // resultsLengthHandler(results);\n\n      console.log(typeof results);\n    }\n\n    if (title === 'Bebidas' && !shouldAlert) {\n      results = await getDrinkResults(radioOn, searchInput);\n      setDrinksApiResults(results);\n      console.log(typeof results);\n    }\n  };\n\n  const handleChange = ({\n    target: {\n      value,\n      name\n    }\n  }) => {\n    if (name === 'searchInput') setSearchState({ ...searchState,\n      searchInput: value\n    });\n  };\n\n  const handleRadio = ({\n    target: {\n      value\n    }\n  }) => {\n    setSearchState({ ...searchState,\n      radioOn: value\n    });\n  };\n\n  const {\n    searchInput,\n    radioOn\n  } = searchState;\n  if (pathToGo !== null) return /*#__PURE__*/React.createElement(Redirect, {\n    to: pathToGo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Buscar receita\",\n    \"data-testid\": \"search-input\",\n    name: \"searchInput\",\n    value: searchInput,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    onChange: handleRadio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ingredientRadio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Ingrediente\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"ingredient-search-radio\",\n    type: \"radio\",\n    id: \"ingredientRadio\",\n    value: \"ingredientRadio\",\n    checked: radioOn === 'ingredientRadio',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"nameRadio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Nome\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"name-search-radio\",\n    type: \"radio\",\n    id: \"nameRadio\",\n    value: \"nameRadio\",\n    checked: radioOn === 'nameRadio',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstLetterRadio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Primeira letra\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"first-letter-search-radio\",\n    type: \"radio\",\n    id: \"firstLetterRadio\",\n    value: \"firstLetterRadio\",\n    checked: radioOn === 'firstLetterRadio',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"exec-search-btn\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"Buscar\"), showAlertLetterRadio ? /*#__PURE__*/React.createElement(\"alert\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Sua busca deve conter somente 1 (um) caracter\") : null, showAlertNoResponse ? /*#__PURE__*/React.createElement(\"alert\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Sinto muito, n\\xE3o encontramos nenhuma receita para esses filtros.\") : null);\n};\n\nSearchBar.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default SearchBar;","map":{"version":3,"sources":["/home/administrador/Projects/sd-09-project-recipes-app/src/components/SearchBar.js"],"names":["React","useState","useContext","PropTypes","Redirect","AppContext","getDrinkResults","getFoodResults","SearchBar","title","baseSearchBar","searchInput","radioOn","searchState","setSearchState","showAlertLetterRadio","setShowAlertLetter","pathToGo","setPath","setFoodApiResults","setDrinksApiResults","foodApiResults","drinksApiResults","handleClick","results","shouldAlert","length","console","log","handleChange","target","value","name","handleRadio","showAlertNoResponse","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router';\nimport { AppContext } from '../context/AppContext';\nimport { getDrinkResults, getFoodResults } from '../services';\n\nconst SearchBar = ({ title }) => {\n  const baseSearchBar = {\n    searchInput: '',\n    radioOn: '',\n  };\n\n  const [searchState, setSearchState] = useState(baseSearchBar);\n  const [showAlertLetterRadio, setShowAlertLetter] = useState(false);\n  const [pathToGo, setPath] = useState(null);\n  const { setFoodApiResults,\n    setDrinksApiResults, foodApiResults, drinksApiResults } = useContext(AppContext);\n\n  const handleClick = async () => {\n    const { searchInput, radioOn } = searchState;\n    let results;\n    const shouldAlert = searchInput.length > 1 && radioOn === 'firstLetterRadio';\n    if (shouldAlert) setShowAlertLetter(true);\n    if (title === 'Comidas' && !shouldAlert) {\n      results = await getFoodResults(radioOn, searchInput);\n      setFoodApiResults(results);\n      // resultsLengthHandler(results);\n      console.log(typeof results);\n    }\n    if (title === 'Bebidas' && !shouldAlert) {\n      results = await getDrinkResults(radioOn, searchInput);\n      setDrinksApiResults(results);\n      console.log(typeof results);\n    }\n  };\n\n  const handleChange = ({ target: { value, name } }) => {\n    if (name === 'searchInput') setSearchState({ ...searchState, searchInput: value });\n  };\n\n  const handleRadio = ({ target: { value } }) => {\n    setSearchState({ ...searchState, radioOn: value });\n  };\n  const { searchInput, radioOn } = searchState;\n\n  if (pathToGo !== null) return <Redirect to={ pathToGo } />;\n  return (\n    <form>\n      <input\n        placeholder=\"Buscar receita\"\n        data-testid=\"search-input\"\n        name=\"searchInput\"\n        value={ searchInput }\n        onChange={ handleChange }\n      />\n      <div onChange={ handleRadio }>\n        <label htmlFor=\"ingredientRadio\">\n          Ingrediente\n          <input\n            data-testid=\"ingredient-search-radio\"\n            type=\"radio\"\n            id=\"ingredientRadio\"\n            value=\"ingredientRadio\"\n            checked={ radioOn === 'ingredientRadio' }\n          />\n        </label>\n        <label htmlFor=\"nameRadio\">\n          Nome\n          <input\n            data-testid=\"name-search-radio\"\n            type=\"radio\"\n            id=\"nameRadio\"\n            value=\"nameRadio\"\n            checked={ radioOn === 'nameRadio' }\n          />\n        </label>\n        <label htmlFor=\"firstLetterRadio\">\n          Primeira letra\n          <input\n            data-testid=\"first-letter-search-radio\"\n            type=\"radio\"\n            id=\"firstLetterRadio\"\n            value=\"firstLetterRadio\"\n            checked={ radioOn === 'firstLetterRadio' }\n          />\n        </label>\n      </div>\n      <button\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n        onClick={ handleClick }\n      >\n        Buscar\n      </button>\n      { showAlertLetterRadio\n        ? <alert>Sua busca deve conter somente 1 (um) caracter</alert> : null}\n      { showAlertNoResponse\n        ? <alert>Sinto muito, não encontramos nenhuma receita para esses filtros.</alert>\n        : null}\n    </form>\n  );\n};\n\nSearchBar.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}