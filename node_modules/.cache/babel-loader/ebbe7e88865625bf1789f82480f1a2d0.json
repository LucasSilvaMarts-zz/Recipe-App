{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Projects/sd-09-project-recipes-app/src/components/SearchBar.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router';\nimport { AppContext } from '../context/AppContext';\nimport { getDrinkResults, getFoodResults } from '../services';\nimport '../CSS/SearchBar.css';\n\nconst checkRedirect = (foods, drinks, setPath) => {\n  if (foods.length === 1) {\n    setPath(`/comidas/${foods[0].idMeal}`);\n  } else if (drinks.length === 1) {\n    setPath(`bebidas/${drinks[0].idDrink}`);\n  }\n};\n\nconst SearchBar = ({\n  title\n}) => {\n  const baseSearchBar = {\n    searchInput: '',\n    radioOn: ''\n  };\n  const [searchState, setSearchState] = useState(baseSearchBar);\n  const [showAlertLetterRadio, setShowAlertLetter] = useState(false);\n  const [noResultsApi, setNoResults] = useState(1);\n  const [pathToGo, setPath] = useState(null);\n  const {\n    foods,\n    drinks,\n    setFoodApiResults,\n    setDrinksApiResults\n  } = useContext(AppContext);\n\n  const handleClick = async () => {\n    const {\n      searchInput,\n      radioOn\n    } = searchState;\n    let results;\n    const shouldAlert = searchInput.length > 1 && radioOn === 'firstLetterRadio';\n    if (shouldAlert) setShowAlertLetter(true);else setShowAlertLetter(false);\n\n    if (title === 'Comidas' && !shouldAlert) {\n      results = await getFoodResults(radioOn, searchInput);\n      setFoodApiResults(results);\n      setNoResults(results);\n    }\n\n    if (title === 'Bebidas' && !shouldAlert) {\n      results = await getDrinkResults(radioOn, searchInput);\n      setDrinksApiResults(results);\n      setNoResults(results);\n    }\n  };\n\n  const handleChange = ({\n    target: {\n      value,\n      name\n    }\n  }) => {\n    if (name === 'searchInput') setSearchState({ ...searchState,\n      searchInput: value\n    });\n  };\n\n  const handleRadio = ({\n    target: {\n      value\n    }\n  }) => {\n    setSearchState({ ...searchState,\n      radioOn: value\n    });\n  };\n\n  const handleErrorOther = () => {\n    setNoResults(1);\n    return alert('Sinto muito, nÃ£o encontramos nenhuma receita para esses filtros.');\n  };\n\n  const handleErrorLetter = () => {\n    setShowAlertLetter(false);\n    return alert('Sua busca deve conter somente 1 (um) caracter');\n  };\n\n  useEffect(() => {\n    checkRedirect(foods, drinks, setPath);\n  }, [foods, drinks]);\n  const {\n    searchInput,\n    radioOn\n  } = searchState;\n  if (pathToGo !== null) return /*#__PURE__*/React.createElement(Redirect, {\n    to: pathToGo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Buscar receita\",\n    \"data-testid\": \"search-input\",\n    name: \"searchInput\",\n    value: searchInput,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    onChange: handleRadio,\n    className: \"radio-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ingredientRadio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Ingrediente\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"ingredient-search-radio\",\n    type: \"radio\",\n    id: \"ingredientRadio\",\n    value: \"ingredientRadio\",\n    checked: radioOn === 'ingredientRadio',\n    className: \"radio-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"nameRadio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Nome\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"name-search-radio\",\n    type: \"radio\",\n    id: \"nameRadio\",\n    value: \"nameRadio\",\n    checked: radioOn === 'nameRadio',\n    className: \"radio-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstLetterRadio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"Primeira letra\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"first-letter-search-radio\",\n    type: \"radio\",\n    id: \"firstLetterRadio\",\n    value: \"firstLetterRadio\",\n    checked: radioOn === 'firstLetterRadio',\n    className: \"radio-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"exec-search-btn\",\n    className: \"search-btn\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"Buscar\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), showAlertLetterRadio === true ? handleErrorLetter() : null, noResultsApi === 'null' ? handleErrorOther() : null);\n};\n\nSearchBar.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default SearchBar;","map":{"version":3,"sources":["/home/administrador/Projects/sd-09-project-recipes-app/src/components/SearchBar.js"],"names":["React","useState","useContext","useEffect","PropTypes","Redirect","AppContext","getDrinkResults","getFoodResults","checkRedirect","foods","drinks","setPath","length","idMeal","idDrink","SearchBar","title","baseSearchBar","searchInput","radioOn","searchState","setSearchState","showAlertLetterRadio","setShowAlertLetter","noResultsApi","setNoResults","pathToGo","setFoodApiResults","setDrinksApiResults","handleClick","results","shouldAlert","handleChange","target","value","name","handleRadio","handleErrorOther","alert","handleErrorLetter","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router';\nimport { AppContext } from '../context/AppContext';\nimport { getDrinkResults, getFoodResults } from '../services';\nimport '../CSS/SearchBar.css';\n\nconst checkRedirect = (foods, drinks, setPath) => {\n  if (foods.length === 1) {\n    setPath(`/comidas/${foods[0].idMeal}`);\n  } else if (drinks.length === 1) {\n    setPath(`bebidas/${drinks[0].idDrink}`);\n  }\n};\n\nconst SearchBar = ({ title }) => {\n  const baseSearchBar = {\n    searchInput: '',\n    radioOn: '',\n  };\n\n  const [searchState, setSearchState] = useState(baseSearchBar);\n  const [showAlertLetterRadio, setShowAlertLetter] = useState(false);\n  const [noResultsApi, setNoResults] = useState(1);\n  const [pathToGo, setPath] = useState(null);\n  const {\n    foods,\n    drinks,\n    setFoodApiResults,\n    setDrinksApiResults,\n  } = useContext(AppContext);\n\n  const handleClick = async () => {\n    const { searchInput, radioOn } = searchState;\n    let results;\n    const shouldAlert = searchInput.length > 1 && radioOn === 'firstLetterRadio';\n    if (shouldAlert) setShowAlertLetter(true); else setShowAlertLetter(false);\n    if (title === 'Comidas' && !shouldAlert) {\n      results = await getFoodResults(radioOn, searchInput);\n      setFoodApiResults(results);\n      setNoResults(results);\n    }\n    if (title === 'Bebidas' && !shouldAlert) {\n      results = await getDrinkResults(radioOn, searchInput);\n      setDrinksApiResults(results);\n      setNoResults(results);\n    }\n  };\n\n  const handleChange = ({ target: { value, name } }) => {\n    if (name === 'searchInput') setSearchState({ ...searchState, searchInput: value });\n  };\n\n  const handleRadio = ({ target: { value } }) => {\n    setSearchState({ ...searchState, radioOn: value });\n  };\n\n  const handleErrorOther = () => {\n    setNoResults(1);\n    return (alert('Sinto muito, nÃ£o encontramos nenhuma receita para esses filtros.'));\n  };\n\n  const handleErrorLetter = () => {\n    setShowAlertLetter(false);\n    return (alert('Sua busca deve conter somente 1 (um) caracter'));\n  };\n\n  useEffect(() => {\n    checkRedirect(foods, drinks, setPath);\n  }, [foods, drinks]);\n\n  const { searchInput, radioOn } = searchState;\n\n  if (pathToGo !== null) return <Redirect to={ pathToGo } />;\n  return (\n    <form className=\"form-search\">\n      <input\n        placeholder=\"Buscar receita\"\n        data-testid=\"search-input\"\n        name=\"searchInput\"\n        value={ searchInput }\n        onChange={ handleChange }\n      />\n      <div onChange={ handleRadio } className=\"radio-div\">\n        <label htmlFor=\"ingredientRadio\">\n          Ingrediente\n          <input\n            data-testid=\"ingredient-search-radio\"\n            type=\"radio\"\n            id=\"ingredientRadio\"\n            value=\"ingredientRadio\"\n            checked={ radioOn === 'ingredientRadio' }\n            className=\"radio-btn\"\n          />\n        </label>\n        <label htmlFor=\"nameRadio\">\n          Nome\n          <input\n            data-testid=\"name-search-radio\"\n            type=\"radio\"\n            id=\"nameRadio\"\n            value=\"nameRadio\"\n            checked={ radioOn === 'nameRadio' }\n            className=\"radio-btn\"\n          />\n        </label>\n        <label htmlFor=\"firstLetterRadio\">\n          Primeira letra\n          <input\n            data-testid=\"first-letter-search-radio\"\n            type=\"radio\"\n            id=\"firstLetterRadio\"\n            value=\"firstLetterRadio\"\n            checked={ radioOn === 'firstLetterRadio' }\n            className=\"radio-btn\"\n          />\n        </label>\n      </div>\n      <button\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n        className=\"search-btn\"\n        onClick={ handleClick }\n      >\n        Buscar\n      </button>\n      <br />\n      {/* { handleError} */}\n      {/* { handleError} */}\n      { showAlertLetterRadio === true\n        ? handleErrorLetter()\n        : null}\n      { noResultsApi === 'null'\n        ? handleErrorOther()\n        : null}\n    </form>\n  );\n};\n\nSearchBar.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}