{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Projects/sd-09-project-recipes-app/src/pages/Comidas.js\";\nimport React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { AppContext } from '../context/AppContext';\nimport { getFoodsFromCategory } from '../services';\nconst MAX_AMOUNT = 12;\nconst CATEGORIES_NUMBER = 5;\n\nfunction Comidas() {\n  const {\n    foods,\n    foodCategories,\n    setFoodApiResults\n  } = useContext(AppContext);\n  const [clicked, setClicked] = useState({});\n  if (!foods) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 22\n    }\n  }, \"Carregando...\");\n\n  const handleClick = async category => {\n    const response = await getFoodsFromCategory(category);\n\n    if (!clicked[category]) {\n      setClicked({\n        [category]: true\n      });\n      return setFoodApiResults(response);\n    }\n\n    setClicked({\n      [category]: false\n    });\n    return setFoodApiResults([]);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    title: \"Comidas\",\n    searchIcon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"All-category-filter\",\n    type: \"button\",\n    onClick: () => {\n      setFoodApiResults([]);\n      setClicked([]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"All\"), foodCategories && foodCategories.slice(0, CATEGORIES_NUMBER).map(({\n    strCategory\n  }) => /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": `${strCategory}-category-filter`,\n    key: strCategory,\n    type: \"button\",\n    onClick: () => handleClick(strCategory),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, strCategory)), foods && foods.slice(0, MAX_AMOUNT).map((food, index) => /*#__PURE__*/React.createElement(Link, {\n    key: food.idMeal,\n    to: `/comidas/${food.idMeal}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": `${index}-recipe-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-card-img`,\n    src: food.strMealThumb,\n    alt: food.strMeal,\n    width: \"100px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, food.strMeal)))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Comidas;","map":{"version":3,"sources":["/home/administrador/Projects/sd-09-project-recipes-app/src/pages/Comidas.js"],"names":["React","useContext","useState","Link","Header","Footer","AppContext","getFoodsFromCategory","MAX_AMOUNT","CATEGORIES_NUMBER","Comidas","foods","foodCategories","setFoodApiResults","clicked","setClicked","handleClick","category","response","slice","map","strCategory","food","index","idMeal","strMealThumb","strMeal"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { AppContext } from '../context/AppContext';\nimport { getFoodsFromCategory } from '../services';\n\nconst MAX_AMOUNT = 12;\nconst CATEGORIES_NUMBER = 5;\n\nfunction Comidas() {\n  const { foods, foodCategories, setFoodApiResults } = useContext(AppContext);\n  const [clicked, setClicked] = useState({});\n  if (!foods) return <p>Carregando...</p>;\n\n  const handleClick = async (category) => {\n    const response = await getFoodsFromCategory(category);\n    if (!clicked[category]) {\n      setClicked({\n        [category]: true,\n      });\n      return setFoodApiResults(response);\n    }\n    setClicked({\n      [category]: false,\n    });\n    return setFoodApiResults([]);\n  };\n\n  return (\n    <>\n      <Header title=\"Comidas\" searchIcon />\n      <button\n        data-testid=\"All-category-filter\"\n        type=\"button\"\n        onClick={ () => { setFoodApiResults([]); setClicked([]); } }\n      >\n        All\n      </button>\n      { foodCategories\n        && foodCategories.slice(0, CATEGORIES_NUMBER).map(({ strCategory }) => (\n          <button\n            data-testid={ `${strCategory}-category-filter` }\n            key={ strCategory }\n            type=\"button\"\n            onClick={ () => handleClick(strCategory) }\n          >\n            {strCategory}\n          </button>\n        )) }\n      { foods && foods.slice(0, MAX_AMOUNT).map((food, index) => (\n        <Link key={ food.idMeal } to={ `/comidas/${food.idMeal}` }>\n          <div data-testid={ `${index}-recipe-card` }>\n            <img\n              data-testid={ `${index}-card-img` }\n              src={ food.strMealThumb }\n              alt={ food.strMeal }\n              width=\"100px\"\n            />\n            <p data-testid={ `${index}-card-name` }>{food.strMeal}</p>\n          </div>\n        </Link>\n      )) }\n      <Footer />\n    </>\n  );\n}\n\nexport default Comidas;\n"]},"metadata":{},"sourceType":"module"}