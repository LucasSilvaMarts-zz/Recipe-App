{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Projects/sd-09-project-recipes-app/src/pages/DetalhesBebida.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams, Link, useLocation } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport { getDrinkIdDetails, getFoods } from '../services';\nimport { AppContext } from '../context/AppContext';\nimport shareImg from \"../images/shareIcon.svg\";\nimport whiteHeartImg from \"../images/whiteHeartIcon.svg\";\nimport blackHeartImg from \"../images/blackHeartIcon.svg\";\n\nconst DetalhesBebida = () => {\n  const {\n    favoriteRecipe,\n    removeFromFavorite,\n    addToFavorites,\n    removeFromTheFavorites,\n    favorites\n  } = useContext(AppContext);\n  const {\n    id\n  } = useParams();\n  const {\n    pathname\n  } = useLocation();\n  const [idDetails, setIdDetails] = useState([]);\n  const [linkShared, setLinkShared] = useState(false);\n  const [recomendations, setRecomendations] = useState([]);\n\n  const getIngredients = () => {\n    const ingredients = Object.entries(idDetails).filter(details => {\n      const condition1 = details[0].includes('Ingredient');\n      const condition2 = details[1] !== '' && details[1] !== null;\n      return condition1 && condition2;\n    });\n    const measure = Object.entries(idDetails).filter(details => details[0].includes('Measure'));\n    const ingredientsArray = ingredients.reduce((acc, curr, index) => {\n      acc.push({\n        name: curr[1],\n        index\n      });\n      return acc;\n    }, []);\n    const measuresArray = measure.reduce((acc, curr, index) => {\n      acc.push({\n        measure: curr[1],\n        index\n      });\n      return acc;\n    }, []);\n    return ingredientsArray.map(ingredient => {\n      const measurament = measuresArray.filter(quantity => ingredient.index === quantity.index);\n      return {\n        name: ingredient.name,\n        measure: measurament[0].measure\n      };\n    });\n  };\n\n  const fetchDetails = async identification => {\n    const results = await getDrinkIdDetails(identification);\n    setIdDetails(results);\n  };\n\n  const fetchRecomendations = async () => {\n    const MAX_RECOMENDATION = 6;\n    const results = await getFoods();\n    setRecomendations(results.splice(0, MAX_RECOMENDATION));\n  };\n\n  const handleShare = () => {\n    copy(`http://localhost:3000/${pathname}`);\n    setLinkShared(true);\n  };\n\n  const handleFavorite = () => {\n    const {\n      idDrink,\n      strAlcoholic,\n      strCategory,\n      strDrink,\n      strDrinkThumb\n    } = idDetails;\n\n    if (!favorites[idDrink]) {\n      addToFavorites(idDrink);\n      favoriteRecipe({\n        id: idDrink,\n        type: 'bebida',\n        area: '',\n        category: strCategory,\n        alcoholicOrNot: strAlcoholic,\n        name: strDrink,\n        image: strDrinkThumb\n      });\n    } else {\n      removeFromTheFavorites(idDrink);\n      removeFromFavorite(idDrink);\n    }\n  };\n\n  useEffect(() => {\n    fetchDetails(id);\n    fetchRecomendations();\n  }, [id]);\n  if (!idDetails || !recomendations) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 45\n    }\n  }, \"Carregando...\");\n  const {\n    strDrinkThumb,\n    strDrink,\n    strAlcoholic,\n    strInstructions,\n    idDrink\n  } = idDetails;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: strDrinkThumb,\n    alt: strDrink,\n    \"data-testid\": \"recipe-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, strDrink), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"share-btn\",\n    onClick: handleShare,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: shareImg,\n    alt: \"Compartilhar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  })), linkShared && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 23\n    }\n  }, \"Link copiado!\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"favorite-btn\",\n    onClick: handleFavorite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: favorites[idDrink] ? blackHeartImg : whiteHeartImg,\n    alt: \"Favoritar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, strAlcoholic), idDetails && getIngredients().map((ingredient, index) => /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-ingredient-name-and-measure`,\n    key: ingredient.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, `${ingredient.name} ${ingredient.measure === null ? '' : ingredient.measure}`)), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, strInstructions), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, \"Comidas Recomendadas\"), recomendations.map((food, index) => /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": `${index}-recomendation-card`,\n    key: food.idMeal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-card-img`,\n    src: food.strMealThumb,\n    alt: food.strMeal,\n    width: \"100px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, food.strMeal))), /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: `${id}/in-progress`,\n      ingredientsList: getIngredients()\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"start-recipe-btn\",\n    className: \"start-recipe-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Iniciar Receita\")));\n};\n\nexport default DetalhesBebida;","map":{"version":3,"sources":["/home/administrador/Projects/sd-09-project-recipes-app/src/pages/DetalhesBebida.js"],"names":["React","useState","useEffect","useContext","useParams","Link","useLocation","copy","getDrinkIdDetails","getFoods","AppContext","DetalhesBebida","favoriteRecipe","removeFromFavorite","addToFavorites","removeFromTheFavorites","favorites","id","pathname","idDetails","setIdDetails","linkShared","setLinkShared","recomendations","setRecomendations","getIngredients","ingredients","Object","entries","filter","details","condition1","includes","condition2","measure","ingredientsArray","reduce","acc","curr","index","push","name","measuresArray","map","ingredient","measurament","quantity","fetchDetails","identification","results","fetchRecomendations","MAX_RECOMENDATION","splice","handleShare","handleFavorite","idDrink","strAlcoholic","strCategory","strDrink","strDrinkThumb","type","area","category","alcoholicOrNot","image","strInstructions","shareImg","blackHeartImg","whiteHeartImg","food","idMeal","strMealThumb","strMeal","ingredientsList"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useParams, Link, useLocation } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport { getDrinkIdDetails, getFoods } from '../services';\nimport { AppContext } from '../context/AppContext';\nimport shareImg from '../images/shareIcon.svg';\nimport whiteHeartImg from '../images/whiteHeartIcon.svg';\nimport blackHeartImg from '../images/blackHeartIcon.svg';\n\nconst DetalhesBebida = () => {\n  const {\n    favoriteRecipe,\n    removeFromFavorite,\n    addToFavorites,\n    removeFromTheFavorites,\n    favorites,\n  } = useContext(AppContext);\n  const { id } = useParams();\n  const { pathname } = useLocation();\n  const [idDetails, setIdDetails] = useState([]);\n  const [linkShared, setLinkShared] = useState(false);\n  const [recomendations, setRecomendations] = useState([]);\n\n  const getIngredients = () => {\n    const ingredients = Object.entries(idDetails).filter(\n      (details) => {\n        const condition1 = details[0].includes('Ingredient');\n        const condition2 = details[1] !== '' && details[1] !== null;\n        return condition1 && condition2;\n      },\n    );\n    const measure = Object.entries(idDetails).filter(\n      (details) => details[0].includes('Measure'),\n    );\n    const ingredientsArray = ingredients.reduce((acc, curr, index) => {\n      acc.push({ name: curr[1], index });\n      return acc;\n    }, []);\n    const measuresArray = measure.reduce((acc, curr, index) => {\n      acc.push({ measure: curr[1], index });\n      return acc;\n    }, []);\n\n    return ingredientsArray.map((ingredient) => {\n      const measurament = measuresArray\n        .filter((quantity) => ingredient.index === quantity.index);\n      return { name: ingredient.name, measure: measurament[0].measure };\n    });\n  };\n\n  const fetchDetails = async (identification) => {\n    const results = await getDrinkIdDetails(identification);\n    setIdDetails(results);\n  };\n\n  const fetchRecomendations = async () => {\n    const MAX_RECOMENDATION = 6;\n    const results = await getFoods();\n    setRecomendations(results.splice(0, MAX_RECOMENDATION));\n  };\n\n  const handleShare = () => {\n    copy(`http://localhost:3000/${pathname}`);\n    setLinkShared(true);\n  };\n\n  const handleFavorite = () => {\n    const { idDrink, strAlcoholic, strCategory, strDrink, strDrinkThumb } = idDetails;\n    if (!favorites[idDrink]) {\n      addToFavorites(idDrink);\n      favoriteRecipe({\n        id: idDrink,\n        type: 'bebida',\n        area: '',\n        category: strCategory,\n        alcoholicOrNot: strAlcoholic,\n        name: strDrink,\n        image: strDrinkThumb,\n      });\n    } else {\n      removeFromTheFavorites(idDrink);\n      removeFromFavorite(idDrink);\n    }\n  };\n\n  useEffect(() => {\n    fetchDetails(id);\n    fetchRecomendations();\n  }, [id]);\n\n  if (!idDetails || !recomendations) return <p>Carregando...</p>;\n  const { strDrinkThumb, strDrink, strAlcoholic, strInstructions, idDrink } = idDetails;\n\n  return (\n    <div>\n      <img src={ strDrinkThumb } alt={ strDrink } data-testid=\"recipe-photo\" />\n      <h2 data-testid=\"recipe-title\">{strDrink}</h2>\n      <button type=\"button\" data-testid=\"share-btn\" onClick={ handleShare }>\n        <img src={ shareImg } alt=\"Compartilhar\" />\n      </button>\n      { linkShared && <p>Link copiado!</p> }\n      <button type=\"button\" data-testid=\"favorite-btn\" onClick={ handleFavorite }>\n        <img src={ favorites[idDrink] ? blackHeartImg : whiteHeartImg } alt=\"Favoritar\" />\n      </button>\n      <p data-testid=\"recipe-category\">{strAlcoholic}</p>\n      { idDetails && getIngredients().map((ingredient, index) => (\n        <p data-testid={ `${index}-ingredient-name-and-measure` } key={ ingredient.name }>\n          {`${ingredient.name} ${ingredient.measure === null ? '' : ingredient.measure}`}\n        </p>\n      )) }\n      <p data-testid=\"instructions\">{strInstructions}</p>\n      <p>Comidas Recomendadas</p>\n      { recomendations.map((food, index) => (\n        <div data-testid={ `${index}-recomendation-card` } key={ food.idMeal }>\n          <img\n            data-testid={ `${index}-card-img` }\n            src={ food.strMealThumb }\n            alt={ food.strMeal }\n            width=\"100px\"\n          />\n          <p data-testid={ `${index}-card-name` }>{food.strMeal}</p>\n        </div>\n      )) }\n      <Link to={ { pathname: `${id}/in-progress`, ingredientsList: getIngredients() } }>\n        <button\n          type=\"button\"\n          data-testid=\"start-recipe-btn\"\n          className=\"start-recipe-btn\"\n        >\n          Iniciar Receita\n        </button>\n      </Link>\n    </div>\n  );\n};\n\nexport default DetalhesBebida;\n"]},"metadata":{},"sourceType":"module"}