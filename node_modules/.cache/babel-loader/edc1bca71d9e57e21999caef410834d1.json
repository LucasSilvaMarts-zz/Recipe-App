{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Projects/sd-09-project-recipes-app/src/context/AppContext.js\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFoods, getDrinks } from '../services';\nexport const AppContext = createContext();\nconst NUMBER_OF_ITEMS = 12;\n\nconst AppProvider = ({\n  children\n}) => {\n  const [foodApiResults, setFoodApiResults] = useState([]);\n  const [drinksApiResults, setDrinksApiResults] = useState([]);\n  const [foodsArray, setFoodsArray] = useState([]);\n  const [drinksArray, setDrinksArray] = useState([]);\n\n  const fetchFoods = async () => {\n    const response = await getFoods();\n    setFoodsArray(response.slice(0, NUMBER_OF_ITEMS));\n  };\n\n  const fetchDrinks = async () => {\n    const response = await getDrinks();\n    setDrinksArray(response.slice(0, NUMBER_OF_ITEMS));\n  };\n\n  useEffect(() => {\n    fetchFoods();\n    fetchDrinks();\n  }, []);\n  const foods = foodApiResults.length && typeof foodApiResults !== string ? foodApiResults : foodsArray;\n  const drinks = drinksApiResults.length ? drinksApiResults : drinksArray;\n  const context = {\n    foods,\n    drinks,\n    setFoodApiResults,\n    setDrinksApiResults,\n    foodApiResults,\n    drinksApiResults\n  };\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nAppProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default AppProvider;","map":{"version":3,"sources":["/home/administrador/Projects/sd-09-project-recipes-app/src/context/AppContext.js"],"names":["React","createContext","useState","useEffect","PropTypes","getFoods","getDrinks","AppContext","NUMBER_OF_ITEMS","AppProvider","children","foodApiResults","setFoodApiResults","drinksApiResults","setDrinksApiResults","foodsArray","setFoodsArray","drinksArray","setDrinksArray","fetchFoods","response","slice","fetchDrinks","foods","length","string","drinks","context","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,aAApC;AAEA,OAAO,MAAMC,UAAU,GAAGN,aAAa,EAAhC;AAEP,MAAMO,eAAe,GAAG,EAAxB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACW,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMiB,UAAU,GAAG,YAAY;AAC7B,UAAMC,QAAQ,GAAG,MAAMf,QAAQ,EAA/B;AACAW,IAAAA,aAAa,CAACI,QAAQ,CAACC,KAAT,CAAe,CAAf,EAAkBb,eAAlB,CAAD,CAAb;AACD,GAHD;;AAKA,QAAMc,WAAW,GAAG,YAAY;AAC9B,UAAMF,QAAQ,GAAG,MAAMd,SAAS,EAAhC;AACAY,IAAAA,cAAc,CAACE,QAAQ,CAACC,KAAT,CAAe,CAAf,EAAkBb,eAAlB,CAAD,CAAd;AACD,GAHD;;AAKAL,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,UAAU;AACVG,IAAAA,WAAW;AACZ,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAMC,KAAK,GAAGZ,cAAc,CAACa,MAAf,IAAyB,OAAOb,cAAP,KAA0Bc,MAAnD,GAA4Dd,cAA5D,GAA6EI,UAA3F;AACA,QAAMW,MAAM,GAAGb,gBAAgB,CAACW,MAAjB,GAA0BX,gBAA1B,GAA6CI,WAA5D;AAEA,QAAMU,OAAO,GAAG;AACdJ,IAAAA,KADc;AAEdG,IAAAA,MAFc;AAGdd,IAAAA,iBAHc;AAIdE,IAAAA,mBAJc;AAKdH,IAAAA,cALc;AAMdE,IAAAA;AANc,GAAhB;AAQA,sBACE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAGc,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIjB,QADJ,CADF;AAKD,CArCD;;AAuCAD,WAAW,CAACmB,SAAZ,GAAwB;AACtBlB,EAAAA,QAAQ,EAAEN,SAAS,CAACyB,IAAV,CAAeC;AADH,CAAxB;AAIA,eAAerB,WAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFoods, getDrinks } from '../services';\n\nexport const AppContext = createContext();\n\nconst NUMBER_OF_ITEMS = 12;\n\nconst AppProvider = ({ children }) => {\n  const [foodApiResults, setFoodApiResults] = useState([]);\n  const [drinksApiResults, setDrinksApiResults] = useState([]);\n  const [foodsArray, setFoodsArray] = useState([]);\n  const [drinksArray, setDrinksArray] = useState([]);\n\n  const fetchFoods = async () => {\n    const response = await getFoods();\n    setFoodsArray(response.slice(0, NUMBER_OF_ITEMS));\n  };\n\n  const fetchDrinks = async () => {\n    const response = await getDrinks();\n    setDrinksArray(response.slice(0, NUMBER_OF_ITEMS));\n  };\n\n  useEffect(() => {\n    fetchFoods();\n    fetchDrinks();\n  }, []);\n\n  const foods = foodApiResults.length && typeof foodApiResults !== string ? foodApiResults : foodsArray;\n  const drinks = drinksApiResults.length ? drinksApiResults : drinksArray;\n\n  const context = {\n    foods,\n    drinks,\n    setFoodApiResults,\n    setDrinksApiResults,\n    foodApiResults,\n    drinksApiResults,\n  };\n  return (\n    <AppContext.Provider value={ context }>\n      { children }\n    </AppContext.Provider>\n  );\n};\n\nAppProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default AppProvider;\n"]},"metadata":{},"sourceType":"module"}