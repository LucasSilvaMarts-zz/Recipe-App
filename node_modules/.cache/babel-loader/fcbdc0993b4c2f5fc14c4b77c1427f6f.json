{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Projects/sd-09-project-recipes-app/src/pages/ProgressoComidas.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Redirect, useLocation, useParams } from 'react-router';\nimport copy from 'clipboard-copy';\nimport CheckBoxProgress from '../components/CheckboxProgress';\nimport { AppContext } from '../context/AppContext';\nimport { getFoodIdDetails } from '../services';\nimport shareImg from \"../images/shareIcon.svg\";\nimport whiteHeartImg from \"../images/whiteHeartIcon.svg\";\nimport blackHeartImg from \"../images/blackHeartIcon.svg\";\n\nconst ProgressoComidas = () => {\n  const [stepsFinished, setStepsFinished] = useState(1);\n  const [idDetails, setIdDetails] = useState([]);\n  const {\n    pathname\n  } = useLocation();\n  const {\n    id\n  } = useParams();\n  const [redirect, setRedirect] = useState(false);\n  const [linkShared, setLinkShared] = useState(false);\n  const [ingredientsArray, setIngredientsArray] = useState([]);\n  const {\n    favoriteRecipe,\n    removeFromFavorite,\n    addToFavorites,\n    removeFromTheFavorites,\n    favorites,\n    finishRecipe,\n    storeInProgress\n  } = useContext(AppContext);\n  let stepsLimit = 1;\n\n  const getIngredients = () => {\n    const ingredients = Object.entries(idDetails).filter(details => {\n      const condition1 = details[0].includes('Ingredient');\n      const condition2 = details[1] !== '' && details[1] !== null;\n      return condition1 && condition2;\n    });\n    const measure = Object.entries(idDetails).filter(details => details[0].includes('Measure'));\n    const ingredientsArray = ingredients.reduce((acc, curr, index) => {\n      acc.push({\n        name: curr[1],\n        index\n      });\n      return acc;\n    }, []);\n    const measuresArray = measure.reduce((acc, curr, index) => {\n      acc.push({\n        measure: curr[1],\n        index\n      });\n      return acc;\n    }, []);\n    return ingredientsArray.map(ingredient => {\n      const measurament = measuresArray.filter(quantity => ingredient.index === quantity.index);\n      return {\n        name: ingredient.name,\n        measure: measurament[0].measure\n      };\n    });\n  };\n\n  const fetchDetails = async identification => {\n    const results = await getFoodIdDetails(identification);\n    setIdDetails(results);\n  };\n\n  const handleShare = () => {\n    copy(`http://localhost:3000/${pathname}`);\n    setLinkShared(true);\n  };\n\n  const ingredientsState = () => {\n    const ingredients = getIngredients();\n    return ingredients;\n  };\n\n  const handleFavorite = () => {\n    const {\n      idMeal,\n      strMeal,\n      strArea,\n      strCategory,\n      strMealThumb\n    } = idDetails;\n\n    if (!favorites[idMeal]) {\n      addToFavorites(idMeal);\n      favoriteRecipe({\n        id: idMeal,\n        type: 'comida',\n        area: strArea,\n        category: strCategory,\n        alcoholicOrNot: '',\n        name: strMeal,\n        image: strMealThumb\n      });\n    } else {\n      removeFromTheFavorites(idMeal);\n      removeFromFavorite(idMeal);\n    }\n  };\n\n  useEffect(() => {\n    fetchDetails(id);\n    const ingredients = getIngredients();\n  }, [id]);\n  if (!idDetails) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 26\n    }\n  }, \"Carregando...\");\n  const {\n    strMealThumb,\n    strMeal,\n    strCategory,\n    strInstructions,\n    idMeal,\n    strArea,\n    strTags\n  } = idDetails;\n\n  const handleFinishRecipe = () => {\n    const doneInfos = {\n      id: idMeal,\n      type: 'meal',\n      area: strArea,\n      category: strCategory,\n      alcoholicOrNot: '',\n      name: strMeal,\n      image: strMealThumb,\n      doneDate: new Date(),\n      tags: strTags\n    };\n    finishRecipe(doneInfos);\n    setRedirect(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: strMealThumb,\n    alt: strMeal,\n    \"data-testid\": \"recipe-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, strMeal), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"share-btn\",\n    onClick: handleShare,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: shareImg,\n    alt: \"Compartilhar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })), linkShared && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 23\n    }\n  }, \"Link copiado!\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"favorite-btn\",\n    onClick: handleFavorite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: favorites[idMeal] ? blackHeartImg : whiteHeartImg,\n    alt: \"Favoritas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, strCategory), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ingredient-steps\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, idDetails && getIngredients().map((ingredient, index) => {\n    stepsLimit += 1;\n    return /*#__PURE__*/React.createElement(CheckBoxProgress, {\n      ingredient: ingredient,\n      index: index,\n      key: index // props={ stepsFinished, setStepsFinished, storeInProgress, setLocalStorageInProgress, setInProgressMeals, setInProgressDrinks }\n      ,\n      storeInProgress: storeInProgress,\n      setStepsFinished: setStepsFinished,\n      stepsFinished: stepsFinished,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, strInstructions), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    disabled: stepsFinished < stepsLimit,\n    onClick: handleFinishRecipe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, \"Finalizar Receita\"), redirect ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/receitas-feitas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }) : null);\n};\n\nexport default ProgressoComidas;","map":{"version":3,"sources":["/home/administrador/Projects/sd-09-project-recipes-app/src/pages/ProgressoComidas.js"],"names":["React","useContext","useState","useEffect","Redirect","useLocation","useParams","copy","CheckBoxProgress","AppContext","getFoodIdDetails","ProgressoComidas","stepsFinished","setStepsFinished","idDetails","setIdDetails","pathname","id","redirect","setRedirect","linkShared","setLinkShared","ingredientsArray","setIngredientsArray","favoriteRecipe","removeFromFavorite","addToFavorites","removeFromTheFavorites","favorites","finishRecipe","storeInProgress","stepsLimit","getIngredients","ingredients","Object","entries","filter","details","condition1","includes","condition2","measure","reduce","acc","curr","index","push","name","measuresArray","map","ingredient","measurament","quantity","fetchDetails","identification","results","handleShare","ingredientsState","handleFavorite","idMeal","strMeal","strArea","strCategory","strMealThumb","type","area","category","alcoholicOrNot","image","strInstructions","strTags","handleFinishRecipe","doneInfos","doneDate","Date","tags","shareImg","blackHeartImg","whiteHeartImg"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { Redirect, useLocation, useParams } from 'react-router';\nimport copy from 'clipboard-copy';\nimport CheckBoxProgress from '../components/CheckboxProgress';\nimport { AppContext } from '../context/AppContext';\nimport { getFoodIdDetails } from '../services';\nimport shareImg from '../images/shareIcon.svg';\nimport whiteHeartImg from '../images/whiteHeartIcon.svg';\nimport blackHeartImg from '../images/blackHeartIcon.svg';\n\nconst ProgressoComidas = () => {\n  const [stepsFinished, setStepsFinished] = useState(1);\n  const [idDetails, setIdDetails] = useState([]);\n  const { pathname } = useLocation();\n  const { id } = useParams();\n  const [redirect, setRedirect] = useState(false);\n  const [linkShared, setLinkShared] = useState(false);\n  const [ingredientsArray, setIngredientsArray] = useState([]);\n\n  const { favoriteRecipe,\n    removeFromFavorite,\n    addToFavorites,\n    removeFromTheFavorites,\n    favorites, finishRecipe,\n    storeInProgress } = useContext(AppContext);\n\n  let stepsLimit = 1;\n  const getIngredients = () => {\n    const ingredients = Object.entries(idDetails).filter((details) => {\n      const condition1 = details[0].includes('Ingredient');\n      const condition2 = details[1] !== '' && details[1] !== null;\n      return condition1 && condition2;\n    });\n    const measure = Object.entries(idDetails)\n      .filter((details) => details[0].includes('Measure'));\n    const ingredientsArray = ingredients.reduce((acc, curr, index) => {\n      acc.push({ name: curr[1], index });\n      return acc;\n    }, []);\n    const measuresArray = measure.reduce((acc, curr, index) => {\n      acc.push({ measure: curr[1], index });\n      return acc;\n    }, []);\n    return ingredientsArray.map((ingredient) => {\n      const measurament = measuresArray\n        .filter((quantity) => ingredient.index === quantity.index);\n      return { name: ingredient.name, measure: measurament[0].measure };\n    });\n  };\n  const fetchDetails = async (identification) => {\n    const results = await getFoodIdDetails(identification);\n    setIdDetails(results);\n  };\n  const handleShare = () => {\n    copy(`http://localhost:3000/${pathname}`);\n    setLinkShared(true);\n  };\n  const ingredientsState = () => {\n    const ingredients = getIngredients();\n    return ingredients;\n  };\n  const handleFavorite = () => {\n    const { idMeal, strMeal, strArea, strCategory, strMealThumb } = idDetails;\n    if (!favorites[idMeal]) {\n      addToFavorites(idMeal);\n      favoriteRecipe({\n        id: idMeal,\n        type: 'comida',\n        area: strArea,\n        category: strCategory,\n        alcoholicOrNot: '',\n        name: strMeal,\n        image: strMealThumb,\n      });\n    } else {\n      removeFromTheFavorites(idMeal);\n      removeFromFavorite(idMeal);\n    }\n  };\n  useEffect(() => {\n    fetchDetails(id);\n    const ingredients = getIngredients();\n  }, [id]);\n\n  if (!idDetails) return <p>Carregando...</p>;\n  const { strMealThumb,\n    strMeal, strCategory, strInstructions, idMeal, strArea, strTags } = idDetails;\n  const handleFinishRecipe = () => {\n    const doneInfos = {\n      id: idMeal,\n      type: 'meal',\n      area: strArea,\n      category: strCategory,\n      alcoholicOrNot: '',\n      name: strMeal,\n      image: strMealThumb,\n      doneDate: new Date(),\n      tags: strTags,\n    };\n    finishRecipe(doneInfos);\n    setRedirect(true);\n  };\n  return (\n    <div>\n      <img src={ strMealThumb } alt={ strMeal } data-testid=\"recipe-photo\" />\n      <h2 data-testid=\"recipe-title\">{strMeal}</h2>\n      <button type=\"button\" data-testid=\"share-btn\" onClick={ handleShare }>\n        <img src={ shareImg } alt=\"Compartilhar\" />\n      </button>\n      { linkShared && <p>Link copiado!</p> }\n      <button type=\"button\" data-testid=\"favorite-btn\" onClick={ handleFavorite }>\n        <img src={ favorites[idMeal] ? blackHeartImg : whiteHeartImg } alt=\"Favoritas\" />\n      </button>\n      <p data-testid=\"recipe-category\">{strCategory}</p>\n      <div className=\"ingredient-steps\">\n        { idDetails && getIngredients().map((ingredient, index) => {\n          stepsLimit += 1;\n          return (\n            <CheckBoxProgress\n              ingredient={ ingredient }\n              index={ index }\n              key={ index }\n              // props={ stepsFinished, setStepsFinished, storeInProgress, setLocalStorageInProgress, setInProgressMeals, setInProgressDrinks }\n              storeInProgress={ storeInProgress }\n              setStepsFinished={ setStepsFinished }\n              stepsFinished={ stepsFinished }\n            />);\n        }) }\n      </div>\n      <p data-testid=\"instructions\">{strInstructions}</p>\n      <button\n        type=\"button\"\n        data-testid=\"finish-recipe-btn\"\n        disabled={ stepsFinished < stepsLimit }\n        onClick={ handleFinishRecipe }\n      >\n        Finalizar Receita\n      </button>\n      {redirect ? <Redirect to=\"/receitas-feitas\" /> : null}\n      {/* {storeInProgress('Meal', idMeal, ingredientsState())} */}\n    </div>\n  );\n};\n\nexport default ProgressoComidas;\n"]},"metadata":{},"sourceType":"module"}