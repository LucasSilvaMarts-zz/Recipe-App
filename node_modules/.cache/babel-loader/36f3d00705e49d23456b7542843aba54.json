{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Projects/sd-09-project-recipes-app/src/components/CheckboxProgress.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../CSS/ProgressoBebidas.css';\n\nconst CheckBoxProgress = ({\n  ingredient,\n  index,\n  setStepsFinished,\n  stepsFinished,\n  ingredientsStatus,\n  setIngredientsStatus\n}) => {\n  const [strikeThrough, setStrikeThrough] = useState(false);\n\n  const checkStep = () => {\n    if (!strikeThrough) {\n      setStrikeThrough(!strikeThrough);\n      setStepsFinished(stepsFinished + 1);\n      const ing = `${ingredient.name}${ingredient.measure === null ? '' : ingredient.measure}`;\n      setIngredientsStatus([...ingredientsStatus, {\n        [ing]: true\n      }]);\n    }\n\n    if (strikeThrough) {\n      setStrikeThrough(!strikeThrough);\n      setStepsFinished(stepsFinished - 1);\n\n      const isCorrect = current => {\n        const ing = `${ingredient.name}${ingredient.measure === null ? '' : ingredient.measure}`;\n        current === {\n          [ing]: true\n        };\n      };\n\n      const foundItem = ingredientsStatus.find(isCorrect);\n      console.log(foundItem);\n      setIngredientsStatus([...ingredientsStatus, {\n        [ing]: false\n      }]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: index,\n    key: ingredient.name,\n    className: strikeThrough ? 'cross' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, `${ingredient.name} ${ingredient.measure === null ? '' : ingredient.measure}`, /*#__PURE__*/React.createElement(\"input\", {\n    id: index,\n    type: \"checkbox\",\n    \"data-testid\": `${index}-ingredient-step`,\n    onClick: checkStep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n};\n\nCheckBoxProgress.propTypes = {\n  ingredient: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    measure: PropTypes.string.isRequired\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  stepsFinished: PropTypes.number.isRequired,\n  setStepsFinished: PropTypes.func.isRequired\n};\nexport default CheckBoxProgress;","map":{"version":3,"sources":["/home/administrador/Projects/sd-09-project-recipes-app/src/components/CheckboxProgress.js"],"names":["React","useState","PropTypes","CheckBoxProgress","ingredient","index","setStepsFinished","stepsFinished","ingredientsStatus","setIngredientsStatus","strikeThrough","setStrikeThrough","checkStep","ing","name","measure","isCorrect","current","foundItem","find","console","log","propTypes","shape","string","isRequired","number","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../CSS/ProgressoBebidas.css';\n\nconst CheckBoxProgress = ({ ingredient, index, setStepsFinished,\n  stepsFinished, ingredientsStatus, setIngredientsStatus }) => {\n  const [strikeThrough, setStrikeThrough] = useState(false);\n  const checkStep = () => {\n    if (!strikeThrough) {\n      setStrikeThrough(!strikeThrough);\n      setStepsFinished(stepsFinished + 1);\n      const ing = `${ingredient.name}${ingredient.measure === null\n        ? '' : ingredient.measure}`;\n      setIngredientsStatus([...ingredientsStatus, { [ing]: true }]);\n    }\n    if (strikeThrough) {\n      setStrikeThrough(!strikeThrough);\n      setStepsFinished(stepsFinished - 1);\n\n      const isCorrect = (current) => {\n        const ing = `${ingredient.name}${ingredient.measure === null\n          ? '' : ingredient.measure}`;\n        current === { [ing]: true };\n      };\n      const foundItem = ingredientsStatus.find(isCorrect);\n      console.log(foundItem);\n      setIngredientsStatus([...ingredientsStatus, { [ing]: false }]);\n    }\n  };\n  return (\n    <label\n      htmlFor={ index }\n      key={ ingredient.name }\n      className={ strikeThrough ? 'cross' : null }\n    >\n      {`${ingredient.name} ${ingredient.measure === null\n        ? '' : ingredient.measure}`}\n      <input\n        id={ index }\n        type=\"checkbox\"\n        data-testid={ `${index}-ingredient-step` }\n        onClick={ checkStep }\n      />\n    </label>\n  );\n};\n\nCheckBoxProgress.propTypes = {\n  ingredient: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    measure: PropTypes.string.isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  stepsFinished: PropTypes.number.isRequired,\n  setStepsFinished: PropTypes.func.isRequired,\n};\n\nexport default CheckBoxProgress;\n"]},"metadata":{},"sourceType":"module"}