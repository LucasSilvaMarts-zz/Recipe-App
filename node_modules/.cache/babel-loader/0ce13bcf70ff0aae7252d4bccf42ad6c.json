{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Projects/sd-09-project-recipes-app/src/pages/DetalhesBebida.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getDrinkIdDetails } from '../services';\nimport shareImg from \"../images/shareIcon.svg\";\nimport whiteHeartImg from \"../images/whiteHeartIcon.svg\";\n\nconst DetalhesBebida = () => {\n  const {\n    id\n  } = useParams();\n  const [idDetails, setIdDetails] = useState([]);\n\n  const fetchDetails = async () => {\n    const results = await getDrinkIdDetails(id);\n    setIdDetails(results);\n  };\n\n  const getIngredients = () => {\n    const ingredientsAndMeasurements = Object.entries(idDetails).filter(details => details[0].includes('Ingredient') || details.includes('Measure'));\n    console.log(ingredientsAndMeasurements);\n    return null;\n  };\n\n  useEffect(() => {\n    fetchDetails();\n  }, []);\n  if (!idDetails) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 26\n    }\n  }, \"Carregando...\");\n  const {\n    strDrinkThumb,\n    strDrink,\n    strCategory,\n    strIngredient1,\n    strMeasure1,\n    strInstructions\n  } = idDetails;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: strDrinkThumb,\n    alt: strDrink,\n    \"data-testid\": \"recipe-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, strDrink), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"share-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: shareImg,\n    alt: \"Compartilhar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"favorite-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: whiteHeartImg,\n    alt: \"Favoritar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, strCategory), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"0-ingredient-name-and-measure\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, strIngredient1, strMeasure1), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, strInstructions), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"0-recomendation-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"comidas recomendadas\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"start-recipe-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Iniciar Receita\"), getIngredients());\n};\n\nexport default DetalhesBebida;","map":{"version":3,"sources":["/home/administrador/Projects/sd-09-project-recipes-app/src/pages/DetalhesBebida.js"],"names":["React","useState","useEffect","useParams","getDrinkIdDetails","DetalhesBebida","id","idDetails","setIdDetails","fetchDetails","results","getIngredients","ingredientsAndMeasurements","Object","entries","filter","details","includes","console","log","strDrinkThumb","strDrink","strCategory","strIngredient1","strMeasure1","strInstructions","shareImg","whiteHeartImg"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,iBAAT,QAAkC,aAAlC;;;;AAIA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAASH,SAAS,EAAxB;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;;AACA,QAAMQ,YAAY,GAAG,YAAY;AAC/B,UAAMC,OAAO,GAAG,MAAMN,iBAAiB,CAACE,EAAD,CAAvC;AACAE,IAAAA,YAAY,CAACE,OAAD,CAAZ;AACD,GAHD;;AAIA,QAAMC,cAAc,GAAG,MAAM;AAC3B,UAAMC,0BAA0B,GAAGC,MAAM,CAACC,OAAP,CAAeP,SAAf,EAA0BQ,MAA1B,CAChCC,OAAD,IAAaA,OAAO,CAAC,CAAD,CAAP,CAAWC,QAAX,CAAoB,YAApB,KAAqCD,OAAO,CAACC,QAAR,CAAiB,SAAjB,CADjB,CAAnC;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,0BAAZ;AACA,WAAQ,IAAR;AACD,GAND;;AAOAV,EAAAA,SAAS,CAAC,MAAM;AAAEO,IAAAA,YAAY;AAAK,GAA1B,EAA4B,EAA5B,CAAT;AACA,MAAI,CAACF,SAAL,EAAgB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AAChB,QAAM;AAAEa,IAAAA,aAAF;AACJC,IAAAA,QADI;AACMC,IAAAA,WADN;AACmBC,IAAAA,cADnB;AACmCC,IAAAA,WADnC;AACgDC,IAAAA;AADhD,MACoElB,SAD1E;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAGa,aAAX;AAA2B,IAAA,GAAG,EAAGC,QAAjC;AAA4C,mBAAY,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAI,mBAAY,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCA,QAAhC,CAFF,eAGE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,mBAAY,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAGK,QAAX;AAAsB,IAAA,GAAG,EAAC,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,eAME;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,mBAAY,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAGC,aAAX;AAA2B,IAAA,GAAG,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,eASE;AAAG,mBAAY,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCL,WAAlC,CATF,eAUE;AAAG,mBAAY,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,cADH,EAEGC,WAFH,CAVF,eAcE;AAAG,mBAAY,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BC,eAA/B,CAdF,eAeE;AAAG,mBAAY,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAfF,eAgBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,mBAAY,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAhBF,EAmBId,cAAc,EAnBlB,CADF;AAuBD,CA1CD;;AA4CA,eAAeN,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getDrinkIdDetails } from '../services';\nimport shareImg from '../images/shareIcon.svg';\nimport whiteHeartImg from '../images/whiteHeartIcon.svg';\n\nconst DetalhesBebida = () => {\n  const { id } = useParams();\n  const [idDetails, setIdDetails] = useState([]);\n  const fetchDetails = async () => {\n    const results = await getDrinkIdDetails(id);\n    setIdDetails(results);\n  };\n  const getIngredients = () => {\n    const ingredientsAndMeasurements = Object.entries(idDetails).filter(\n      (details) => details[0].includes('Ingredient') || details.includes('Measure'),\n    );\n    console.log(ingredientsAndMeasurements);\n    return (null);\n  };\n  useEffect(() => { fetchDetails(); }, []);\n  if (!idDetails) return <p>Carregando...</p>;\n  const { strDrinkThumb,\n    strDrink, strCategory, strIngredient1, strMeasure1, strInstructions } = idDetails;\n\n  return (\n    <div>\n      <img src={ strDrinkThumb } alt={ strDrink } data-testid=\"recipe-photo\" />\n      <h2 data-testid=\"recipe-title\">{strDrink}</h2>\n      <button type=\"button\" data-testid=\"share-btn\">\n        <img src={ shareImg } alt=\"Compartilhar\" />\n      </button>\n      <button type=\"button\" data-testid=\"favorite-btn\">\n        <img src={ whiteHeartImg } alt=\"Favoritar\" />\n      </button>\n      <p data-testid=\"recipe-category\">{strCategory}</p>\n      <p data-testid=\"0-ingredient-name-and-measure\">\n        {strIngredient1}\n        {strMeasure1}\n      </p>\n      <p data-testid=\"instructions\">{strInstructions}</p>\n      <p data-testid=\"0-recomendation-card\">comidas recomendadas</p>\n      <button type=\"button\" data-testid=\"start-recipe-btn\">\n        Iniciar Receita\n      </button>\n      { getIngredients()}\n    </div>\n  );\n};\n\nexport default DetalhesBebida;\n"]},"metadata":{},"sourceType":"module"}