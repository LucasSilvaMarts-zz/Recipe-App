{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Desktop/Portfolio/recipesApp/src/pages/Login.js\";\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../CSS/Login.css';\nimport cooking from '../images/cooking.png';\n\nfunction Login() {\n  const [button, setButton] = useState(true);\n  /* Regex found at: https://github.com/tryber/sd-09-live-lectures/tree/lecture/12.2 */\n\n  const validateInputs = (email, password) => {\n    const regex = /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/igm.test(email);\n    const passwordLimit = 6;\n\n    if (regex && password.length >= passwordLimit) {\n      setButton(false);\n    } else {\n      setButton(true);\n    }\n  };\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  const submitForm = () => {\n    localStorage.setItem('mealsToken', JSON.stringify(1));\n    localStorage.setItem('cocktailsToken', JSON.stringify(1));\n    localStorage.setItem('user', JSON.stringify({\n      email\n    }));\n    setRedirect(true);\n  };\n\n  const handleChange = ({\n    target: {\n      value,\n      name\n    }\n  }) => {\n    validateInputs(email, password);\n\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n\n      case 'password':\n        return setPassword(value);\n\n      default:\n        return undefined;\n    }\n  };\n\n  if (redirect) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/comidas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"login-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"icon\",\n    src: cooking,\n    alt: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Recipe App\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Bem-vindo, Mestre Cuca\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"login--form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"login--input\",\n    type: \"text\",\n    placeholder: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    autoComplete: \"off\",\n    \"data-testid\": \"email-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"login--input\",\n    type: \"password\",\n    placeholder: \"senha\",\n    value: password,\n    name: \"password\",\n    onChange: handleChange,\n    \"data-testid\": \"password-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"login--button\",\n    type: \"button\",\n    \"data-testid\": \"login-submit-btn\",\n    onClick: submitForm,\n    disabled: button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Entrar\")))));\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/administrador/Desktop/Portfolio/recipesApp/src/pages/Login.js"],"names":["React","useState","Redirect","cooking","Login","button","setButton","validateInputs","email","password","regex","test","passwordLimit","length","setEmail","setPassword","redirect","setRedirect","submitForm","localStorage","setItem","JSON","stringify","handleChange","target","value","name","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../CSS/Login.css';\nimport cooking from '../images/cooking.png';\n\nfunction Login() {\n  const [button, setButton] = useState(true);\n\n  /* Regex found at: https://github.com/tryber/sd-09-live-lectures/tree/lecture/12.2 */\n  const validateInputs = (email, password) => {\n    const regex = /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/igm.test(email);\n    const passwordLimit = 6;\n    if (regex && password.length >= passwordLimit) {\n      setButton(false);\n    } else {\n      setButton(true);\n    }\n  };\n\n  const [email, setEmail] = useState('');\n\n  const [password, setPassword] = useState('');\n\n  const [redirect, setRedirect] = useState(false);\n\n  const submitForm = () => {\n    localStorage.setItem('mealsToken', JSON.stringify(1));\n    localStorage.setItem('cocktailsToken', JSON.stringify(1));\n    localStorage.setItem('user', JSON.stringify({ email }));\n    setRedirect(true);\n  };\n\n  const handleChange = ({ target: { value, name } }) => {\n    validateInputs(email, password);\n    switch (name) {\n    case 'email':\n      return setEmail(value);\n    case 'password':\n      return setPassword(value);\n    default:\n      return undefined;\n    }\n  };\n\n  if (redirect) {\n    return <Redirect to=\"/comidas\" />;\n  }\n\n  return (\n    <div>\n      <section className=\"login-section\">\n        <img className=\"icon\" src={ cooking } alt=\"icon\" />\n        <div className=\"login-text\">\n          <h1>Recipe App</h1>\n          <p>Bem-vindo, Mestre Cuca</p>\n        </div>\n        <div className=\"login-card\">\n          <form className=\"login--form\">\n            <input\n              className=\"login--input\"\n              type=\"text\"\n              placeholder=\"email\"\n              name=\"email\"\n              value={ email }\n              onChange={ handleChange }\n              autoComplete=\"off\"\n              data-testid=\"email-input\"\n            />\n            <input\n              className=\"login--input\"\n              type=\"password\"\n              placeholder=\"senha\"\n              value={ password }\n              name=\"password\"\n              onChange={ handleChange }\n              data-testid=\"password-input\"\n            />\n            <button\n              className=\"login--button\"\n              type=\"button\"\n              data-testid=\"login-submit-btn\"\n              onClick={ submitForm }\n              disabled={ button }\n            >\n              Entrar\n            </button>\n          </form>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}