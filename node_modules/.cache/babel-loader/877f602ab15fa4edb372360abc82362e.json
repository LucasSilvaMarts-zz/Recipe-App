{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Projects/sd-09-project-recipes-app/src/components/CheckboxProgress.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../CSS/ProgressoBebidas.css';\n\nconst CheckBoxProgress = ({\n  ingredient,\n  index,\n  setStepsFinished,\n  stepsFinished,\n  inProgressRecipe,\n  idRecipe,\n  ingStatus,\n  setIngStatus\n}) => {\n  const ing = `${ingredient.name} ${ingredient.measure === null ? '' : ingredient.measure}`;\n  const [strikeThrough, setStrikeThrough] = useState(ingStatus[ing]);\n\n  const checkStep = () => {\n    if (!strikeThrough) {\n      setStrikeThrough(!strikeThrough);\n      setStepsFinished(stepsFinished + 1);\n      inProgressRecipe({ ...ingStatus,\n        [ing]: true\n      }, idRecipe);\n      setIngStatus({ ...ingStatus,\n        [ing]: true\n      }); // ingredientsUsed(ing);\n    }\n\n    if (strikeThrough) {\n      setStrikeThrough(!strikeThrough);\n      setStepsFinished(stepsFinished - 1);\n      inProgressRecipe({ ...ingStatus,\n        [ing]: false\n      }, idRecipe);\n      setIngStatus({ ...ingStatus,\n        [ing]: false\n      }); // ingredientsUsed(ing);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: index,\n    key: ingredient.name,\n    className: strikeThrough || ingStatus[ing] ? 'cross' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, ing, /*#__PURE__*/React.createElement(\"input\", {\n    id: index,\n    type: \"checkbox\",\n    \"data-testid\": `${index}-ingredient-step`,\n    checked: ingStatus[ing],\n    onClick: checkStep,\n    value: ing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n};\n\nCheckBoxProgress.propTypes = {\n  ingredient: PropTypes.shape({\n    name: PropTypes.string,\n    measure: PropTypes.string\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  stepsFinished: PropTypes.number.isRequired,\n  setStepsFinished: PropTypes.func.isRequired,\n  // ingredientsUsed: PropTypes.arrayOf(PropTypes.string).isRequired,\n  idRecipe: PropTypes.string.isRequired,\n  inProgressRecipe: PropTypes.func.isRequired,\n  ingStatus: PropTypes.shape({}).isRequired,\n  setIngStatus: PropTypes.func.isRequired // type: PropTypes.string.isRequired,\n\n};\nexport default CheckBoxProgress;","map":{"version":3,"sources":["/home/administrador/Projects/sd-09-project-recipes-app/src/components/CheckboxProgress.js"],"names":["React","useState","PropTypes","CheckBoxProgress","ingredient","index","setStepsFinished","stepsFinished","inProgressRecipe","idRecipe","ingStatus","setIngStatus","ing","name","measure","strikeThrough","setStrikeThrough","checkStep","propTypes","shape","string","isRequired","number","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../CSS/ProgressoBebidas.css';\n\nconst CheckBoxProgress = ({\n  ingredient, index, setStepsFinished,\n  stepsFinished,\n  inProgressRecipe, idRecipe, ingStatus, setIngStatus,\n}) => {\n  const ing = `${ingredient.name} ${ingredient.measure === null\n    ? '' : ingredient.measure}`;\n  const [strikeThrough, setStrikeThrough] = useState(ingStatus[ing]);\n\n  const checkStep = () => {\n    if (!strikeThrough) {\n      setStrikeThrough(!strikeThrough);\n      setStepsFinished(stepsFinished + 1);\n      inProgressRecipe({ ...ingStatus, [ing]: true }, idRecipe);\n      setIngStatus({ ...ingStatus, [ing]: true });\n      // ingredientsUsed(ing);\n    }\n    if (strikeThrough) {\n      setStrikeThrough(!strikeThrough);\n      setStepsFinished(stepsFinished - 1);\n      inProgressRecipe({ ...ingStatus, [ing]: false }, idRecipe);\n      setIngStatus({ ...ingStatus, [ing]: false });\n      // ingredientsUsed(ing);\n    }\n  };\n\n  return (\n    <label\n      htmlFor={ index }\n      key={ ingredient.name }\n      className={ strikeThrough || ingStatus[ing] ? 'cross' : null }\n    >\n      {ing}\n      <input\n        id={ index }\n        type=\"checkbox\"\n        data-testid={ `${index}-ingredient-step` }\n        checked={ ingStatus[ing] }\n        onClick={ checkStep }\n        value={ ing }\n      />\n    </label>\n  );\n};\n\nCheckBoxProgress.propTypes = {\n  ingredient: PropTypes.shape({\n    name: PropTypes.string,\n    measure: PropTypes.string,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  stepsFinished: PropTypes.number.isRequired,\n  setStepsFinished: PropTypes.func.isRequired,\n  // ingredientsUsed: PropTypes.arrayOf(PropTypes.string).isRequired,\n  idRecipe: PropTypes.string.isRequired,\n  inProgressRecipe: PropTypes.func.isRequired,\n  ingStatus: PropTypes.shape({}).isRequired,\n  setIngStatus: PropTypes.func.isRequired,\n  // type: PropTypes.string.isRequired,\n};\n\nexport default CheckBoxProgress;\n"]},"metadata":{},"sourceType":"module"}