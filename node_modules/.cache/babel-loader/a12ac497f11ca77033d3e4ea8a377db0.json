{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Projects/sd-09-project-recipes-app/src/components/DoneMealCard.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport '../CSS/DoneCard.css';\n\nfunction DoneMealCard({\n  recipe,\n  index\n}) {\n  const [linkShared, setLinkShared] = useState(false);\n\n  const shareLink = id => {\n    copy(`http://localhost:3000/comidas/${id}`);\n    setLinkShared(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: recipe.name,\n    className: \"meal-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: recipe.type === 'comida' ? `/comidas/${recipe.id}` : `/bebidas/${recipe.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: recipe.image,\n    alt: \"\",\n    \"data-testid\": `${index}-horizontal-image`,\n    width: \"100px\",\n    className: \"food-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infos-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipe-names\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, `${recipe.area} - ${recipe.category}`), /*#__PURE__*/React.createElement(Link, {\n    to: recipe.type === 'comida' ? `/comidas/${recipe.id}` : `/bebidas/${recipe.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, recipe.name))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipe-card-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-done-date`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, `Data: ${recipe.doneDate}`), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => shareLink(recipe.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    src: shareIcon,\n    alt: \"compartilhar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }))), linkShared && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \"Link copiado!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tags-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, recipe.tags.map((tag, tagIndex) => /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `0-${tag}-horizontal-tag`,\n    key: tagIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, tag)))));\n}\n\nDoneMealCard.propTypes = {\n  recipe: PropTypes.shape({\n    alcoholicOrNot: PropTypes.string.isRequired,\n    area: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    doneDate: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n    type: PropTypes.string.isRequired\n  }).isRequired,\n  index: PropTypes.number.isRequired\n};\nexport default DoneMealCard;","map":{"version":3,"sources":["/home/administrador/Projects/sd-09-project-recipes-app/src/components/DoneMealCard.js"],"names":["React","Link","PropTypes","DoneMealCard","recipe","index","linkShared","setLinkShared","useState","shareLink","id","copy","name","type","image","area","category","doneDate","shareIcon","tags","map","tag","tagIndex","propTypes","shape","alcoholicOrNot","string","isRequired","arrayOf","number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport shareIcon from '../images/shareIcon.svg';\nimport '../CSS/DoneCard.css';\n\nfunction DoneMealCard({ recipe, index }) {\n  const [linkShared, setLinkShared] = useState(false);\n  const shareLink = (id) => {\n    copy(`http://localhost:3000/comidas/${id}`);\n    setLinkShared(true);\n  };\n  return (\n    <div key={ recipe.name } className=\"meal-card\">\n      <div className=\"img-div\">\n        <Link\n          to={ recipe.type === 'comida'\n            ? `/comidas/${recipe.id}` : `/bebidas/${recipe.id}` }\n        >\n          <img\n            src={ recipe.image }\n            alt=\"\"\n            data-testid={ `${index}-horizontal-image` }\n            width=\"100px\"\n            className=\"food-img\"\n          />\n        </Link>\n      </div>\n      <div className=\"infos-div\">\n        <div className=\"recipe-names\">\n          <p data-testid={ `${index}-horizontal-top-text` }>\n            { `${recipe.area} - ${recipe.category}` }\n          </p>\n          <Link\n            to={ recipe.type === 'comida'\n              ? `/comidas/${recipe.id}` : `/bebidas/${recipe.id}` }\n          >\n            <h3 data-testid={ `${index}-horizontal-name` }>\n              { recipe.name }\n            </h3>\n          </Link>\n        </div>\n        <div className=\"recipe-card-buttons\">\n          <p data-testid={ `${index}-horizontal-done-date` }>\n            {`Data: ${recipe.doneDate}`}\n          </p>\n          <button\n            type=\"button\"\n            onClick={ () => shareLink(recipe.id) }\n          >\n            <img\n              data-testid={ `${index}-horizontal-share-btn` }\n              src={ shareIcon }\n              alt=\"compartilhar\"\n            />\n          </button>\n        </div>\n        { linkShared && <p>Link copiado!</p> }\n        <div className=\"tags-div\">\n          { recipe.tags.map((tag, tagIndex) => (\n            <p data-testid={ `0-${tag}-horizontal-tag` } key={ tagIndex }>\n              { tag }\n            </p>\n          )) }\n        </div>\n        {/* <p data-testid={ `${index}-${recipe.type}-horizontal-tag` }>\n          { recipe.type }\n        </p> */}\n      </div>\n    </div>\n  );\n}\n\nDoneMealCard.propTypes = {\n  recipe: PropTypes.shape({\n    alcoholicOrNot: PropTypes.string.isRequired,\n    area: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    doneDate: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n    type: PropTypes.string.isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default DoneMealCard;\n"]},"metadata":{},"sourceType":"module"}