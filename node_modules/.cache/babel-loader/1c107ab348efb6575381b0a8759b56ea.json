{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Projects/sd-09-project-recipes-app/src/components/DoneDrinkCard.js\";\nimport React, { useState } from 'react';\nimport copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport '../CSS/DoneCard.css';\n\nfunction DoneDrinkCard({\n  recipe,\n  index\n}) {\n  const [linkShared, setLinkShared] = useState(false);\n\n  const shareLink = id => {\n    copy(`http://localhost:3000/bebidas/${id}`);\n    setLinkShared(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: recipe.name,\n    className: \"meal-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: recipe.type === 'comida' ? `/comidas/${recipe.id}` : `/bebidas/${recipe.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: recipe.image,\n    alt: \"\",\n    \"data-testid\": `${index}-horizontal-image`,\n    width: \"100px\",\n    className: \"food-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infos-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipe-names\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, recipe.alcoholicOrNot), /*#__PURE__*/React.createElement(Link, {\n    to: recipe.type === 'comida' ? `/comidas/${recipe.id}` : `/bebidas/${recipe.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, recipe.name))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipe-card-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-done-date`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, `Data: ${recipe.doneDate}`), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => shareLink(recipe.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    src: shareIcon,\n    alt: \"compartilhar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }))), linkShared && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \"Link copiado!\"), recipe.tags.map((tag, tagIndex) => /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `0-${tag}-horizontal-tag`,\n    key: tagIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, tag))));\n}\n\nDoneDrinkCard.propTypes = {\n  recipe: PropTypes.shape({\n    alcoholicOrNot: PropTypes.string.isRequired,\n    area: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    doneDate: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n    type: PropTypes.string.isRequired\n  }).isRequired,\n  index: PropTypes.number.isRequired\n};\nexport default DoneDrinkCard;","map":{"version":3,"sources":["/home/administrador/Projects/sd-09-project-recipes-app/src/components/DoneDrinkCard.js"],"names":["React","useState","copy","PropTypes","Link","DoneDrinkCard","recipe","index","linkShared","setLinkShared","shareLink","id","name","type","image","alcoholicOrNot","doneDate","shareIcon","tags","map","tag","tagIndex","propTypes","shape","string","isRequired","area","category","arrayOf","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,OAAO,qBAAP;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAvB,EAA0C;AACxC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;;AACA,QAAMS,SAAS,GAAIC,EAAD,IAAQ;AACxBT,IAAAA,IAAI,CAAE,iCAAgCS,EAAG,EAArC,CAAJ;AACAF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAHD;;AAIA,sBACE;AAAK,IAAA,GAAG,EAAGH,MAAM,CAACM,IAAlB;AAAyB,IAAA,SAAS,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,EAAE,EACAN,MAAM,CAACO,IAAP,KAAgB,QAAhB,GACK,YAAWP,MAAM,CAACK,EAAG,EAD1B,GAC+B,YAAWL,MAAM,CAACK,EAAG,EAHxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AACE,IAAA,GAAG,EAAGL,MAAM,CAACQ,KADf;AAEE,IAAA,GAAG,EAAC,EAFN;AAGE,mBAAe,GAAEP,KAAM,mBAHzB;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,SAAS,EAAC,UALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CADF,eAiBE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,mBAAe,GAAEA,KAAM,sBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,MAAM,CAACS,cADV,CADF,eAIE,oBAAC,IAAD;AACE,IAAA,EAAE,EACAT,MAAM,CAACO,IAAP,KAAgB,QAAhB,GACK,YAAWP,MAAM,CAACK,EAAG,EAD1B,GAC+B,YAAWL,MAAM,CAACK,EAAG,EAHxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAI,mBAAe,GAAEJ,KAAM,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACID,MAAM,CAACM,IADX,CANF,CAJF,CADF,eAgBE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,mBAAe,GAAEL,KAAM,uBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,SAAQD,MAAM,CAACU,QAAS,EAD5B,CADF,eAIE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAG,MAAMN,SAAS,CAACJ,MAAM,CAACK,EAAR,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AACE,mBAAe,GAAEJ,KAAM,uBADzB;AAEE,IAAA,GAAG,EAAGU,SAFR;AAGE,IAAA,GAAG,EAAC,cAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAJF,CAhBF,EA+BIT,UAAU,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA/BlB,EAgCIF,MAAM,CAACY,IAAP,CAAYC,GAAZ,CAAgB,CAACC,GAAD,EAAMC,QAAN,kBAChB;AACE,mBAAe,KAAID,GAAI,iBADzB;AAEE,IAAA,GAAG,EAAGC,QAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIID,GAJJ,CADA,CAhCJ,CAjBF,CADF;AAkED;;AAEDf,aAAa,CAACiB,SAAd,GAA0B;AACxBhB,EAAAA,MAAM,EAAEH,SAAS,CAACoB,KAAV,CAAgB;AACtBR,IAAAA,cAAc,EAAEZ,SAAS,CAACqB,MAAV,CAAiBC,UADX;AAEtBC,IAAAA,IAAI,EAAEvB,SAAS,CAACqB,MAAV,CAAiBC,UAFD;AAGtBE,IAAAA,QAAQ,EAAExB,SAAS,CAACqB,MAAV,CAAiBC,UAHL;AAItBT,IAAAA,QAAQ,EAAEb,SAAS,CAACqB,MAAV,CAAiBC,UAJL;AAKtBd,IAAAA,EAAE,EAAER,SAAS,CAACqB,MAAV,CAAiBC,UALC;AAMtBX,IAAAA,KAAK,EAAEX,SAAS,CAACqB,MAAV,CAAiBC,UANF;AAOtBb,IAAAA,IAAI,EAAET,SAAS,CAACqB,MAAV,CAAiBC,UAPD;AAQtBP,IAAAA,IAAI,EAAEf,SAAS,CAACyB,OAAV,CAAkBzB,SAAS,CAACqB,MAA5B,EAAoCC,UARpB;AAStBZ,IAAAA,IAAI,EAAEV,SAAS,CAACqB,MAAV,CAAiBC;AATD,GAAhB,EAULA,UAXqB;AAYxBlB,EAAAA,KAAK,EAAEJ,SAAS,CAAC0B,MAAV,CAAiBJ;AAZA,CAA1B;AAeA,eAAepB,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport shareIcon from '../images/shareIcon.svg';\nimport '../CSS/DoneCard.css';\n\nfunction DoneDrinkCard({ recipe, index }) {\n  const [linkShared, setLinkShared] = useState(false);\n  const shareLink = (id) => {\n    copy(`http://localhost:3000/bebidas/${id}`);\n    setLinkShared(true);\n  };\n  return (\n    <div key={ recipe.name } className=\"meal-card\">\n      <div className=\"img-div\">\n        <Link\n          to={\n            recipe.type === 'comida'\n              ? `/comidas/${recipe.id}` : `/bebidas/${recipe.id}`\n          }\n        >\n          <img\n            src={ recipe.image }\n            alt=\"\"\n            data-testid={ `${index}-horizontal-image` }\n            width=\"100px\"\n            className=\"food-img\"\n          />\n        </Link>\n      </div>\n      <div className=\"infos-div\">\n        <div className=\"recipe-names\">\n          <p data-testid={ `${index}-horizontal-top-text` }>\n            {recipe.alcoholicOrNot}\n          </p>\n          <Link\n            to={\n              recipe.type === 'comida'\n                ? `/comidas/${recipe.id}` : `/bebidas/${recipe.id}`\n            }\n          >\n            <h4 data-testid={ `${index}-horizontal-name` }>\n              { recipe.name }\n            </h4>\n          </Link>\n        </div>\n        <div className=\"recipe-card-buttons\">\n          <p data-testid={ `${index}-horizontal-done-date` }>\n            {`Data: ${recipe.doneDate}`}\n          </p>\n          <button\n            type=\"button\"\n            onClick={ () => shareLink(recipe.id) }\n          >\n            <img\n              data-testid={ `${index}-horizontal-share-btn` }\n              src={ shareIcon }\n              alt=\"compartilhar\"\n            />\n          </button>\n        </div>\n        { linkShared && <p>Link copiado!</p> }\n        { recipe.tags.map((tag, tagIndex) => (\n          <p\n            data-testid={ `0-${tag}-horizontal-tag` }\n            key={ tagIndex }\n          >\n            { tag }\n          </p>\n        )) }\n        {/* <p\n          data-testid={ `${index}-${recipe.type}-horizontal-tag` }\n        >\n          { recipe.type }\n        </p> */}\n      </div>\n    </div>\n  );\n}\n\nDoneDrinkCard.propTypes = {\n  recipe: PropTypes.shape({\n    alcoholicOrNot: PropTypes.string.isRequired,\n    area: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    doneDate: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n    type: PropTypes.string.isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default DoneDrinkCard;\n"]},"metadata":{},"sourceType":"module"}