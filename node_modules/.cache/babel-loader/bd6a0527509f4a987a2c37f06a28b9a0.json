{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Projects/sd-09-project-recipes-app/src/components/CheckboxProgress.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../CSS/ProgressoBebidas.css';\n\nconst CheckBoxProgress = ({\n  ingredient,\n  index,\n  setStepsFinished,\n  stepsFinished,\n  inProgressRecipe,\n  idRecipe,\n  ingStatus,\n  setIngStatus\n}) => {\n  const [strikeThrough, setStrikeThrough] = useState(false);\n  const ing = `${ingredient.name} ${ingredient.measure === null ? '' : ingredient.measure}`;\n  const isChecked = Object.keys(ingStatus).find(ingName => ingName === ing);\n\n  const checkStep = () => {\n    if (!strikeThrough) {\n      setStrikeThrough(!strikeThrough);\n      setStepsFinished(stepsFinished + 1);\n      inProgressRecipe({ ...ingStatus,\n        [ing]: true\n      }, idRecipe);\n      setIngStatus({ ...ingStatus,\n        [ing]: true\n      }); // ingredientsUsed(ing);\n    }\n\n    if (strikeThrough) {\n      setStrikeThrough(!strikeThrough);\n      setStepsFinished(stepsFinished - 1);\n      inProgressRecipe({ ...ingStatus,\n        [ing]: false\n      }, idRecipe);\n      setIngStatus({ ...ingStatus,\n        [ing]: false\n      }); // ingredientsUsed(ing);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: index,\n    key: ingredient.name,\n    className: strikeThrough || isChecked ? 'cross' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, ing, /*#__PURE__*/React.createElement(\"input\", {\n    id: index,\n    type: \"checkbox\",\n    \"data-testid\": `${index}-ingredient-step`,\n    checked: ingStatus[ing],\n    onClick: checkStep,\n    value: ing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n};\n\nCheckBoxProgress.propTypes = {\n  ingredient: PropTypes.shape({\n    name: PropTypes.string,\n    measure: PropTypes.string\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  stepsFinished: PropTypes.number.isRequired,\n  setStepsFinished: PropTypes.func.isRequired,\n  // ingredientsUsed: PropTypes.arrayOf(PropTypes.string).isRequired,\n  idRecipe: PropTypes.string.isRequired,\n  inProgressRecipe: PropTypes.func.isRequired,\n  ingStatus: PropTypes.shape({}).isRequired,\n  setIngStatus: PropTypes.func.isRequired // type: PropTypes.string.isRequired,\n\n};\nexport default CheckBoxProgress;","map":{"version":3,"sources":["/home/administrador/Projects/sd-09-project-recipes-app/src/components/CheckboxProgress.js"],"names":["React","useState","PropTypes","CheckBoxProgress","ingredient","index","setStepsFinished","stepsFinished","inProgressRecipe","idRecipe","ingStatus","setIngStatus","strikeThrough","setStrikeThrough","ing","name","measure","isChecked","Object","keys","find","ingName","checkStep","propTypes","shape","string","isRequired","number","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../CSS/ProgressoBebidas.css';\n\nconst CheckBoxProgress = ({\n  ingredient, index, setStepsFinished,\n  stepsFinished,\n  inProgressRecipe, idRecipe, ingStatus, setIngStatus,\n}) => {\n  const [strikeThrough, setStrikeThrough] = useState(false);\n  const ing = `${ingredient.name} ${ingredient.measure === null\n    ? '' : ingredient.measure}`;\n  const isChecked = Object.keys(ingStatus).find((ingName) => (ingName === ing));\n\n  const checkStep = () => {\n    if (!strikeThrough) {\n      setStrikeThrough(!strikeThrough);\n      setStepsFinished(stepsFinished + 1);\n      inProgressRecipe({ ...ingStatus, [ing]: true }, idRecipe);\n      setIngStatus({ ...ingStatus, [ing]: true });\n      // ingredientsUsed(ing);\n    }\n    if (strikeThrough) {\n      setStrikeThrough(!strikeThrough);\n      setStepsFinished(stepsFinished - 1);\n      inProgressRecipe({ ...ingStatus, [ing]: false }, idRecipe);\n      setIngStatus({ ...ingStatus, [ing]: false });\n      // ingredientsUsed(ing);\n    }\n  };\n\n  return (\n    <label\n      htmlFor={ index }\n      key={ ingredient.name }\n      className={ strikeThrough || isChecked ? 'cross' : null }\n    >\n      {ing}\n      <input\n        id={ index }\n        type=\"checkbox\"\n        data-testid={ `${index}-ingredient-step` }\n        checked={ ingStatus[ing] }\n        onClick={ checkStep }\n        value={ ing }\n      />\n    </label>\n  );\n};\n\nCheckBoxProgress.propTypes = {\n  ingredient: PropTypes.shape({\n    name: PropTypes.string,\n    measure: PropTypes.string,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  stepsFinished: PropTypes.number.isRequired,\n  setStepsFinished: PropTypes.func.isRequired,\n  // ingredientsUsed: PropTypes.arrayOf(PropTypes.string).isRequired,\n  idRecipe: PropTypes.string.isRequired,\n  inProgressRecipe: PropTypes.func.isRequired,\n  ingStatus: PropTypes.shape({}).isRequired,\n  setIngStatus: PropTypes.func.isRequired,\n  // type: PropTypes.string.isRequired,\n};\n\nexport default CheckBoxProgress;\n"]},"metadata":{},"sourceType":"module"}