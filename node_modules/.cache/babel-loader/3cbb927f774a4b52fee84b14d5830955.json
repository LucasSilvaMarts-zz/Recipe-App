{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Projects/sd-09-project-recipes-app/src/pages/ExplorarComidasArea.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppContext } from '../context/AppContext';\nimport { getMealByArea } from '../services';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction ExplorarComidasArea() {\n  const {\n    mealAreas,\n    foods\n  } = useContext(AppContext);\n  const [areaValue, setAreaValue] = useState('Selecione uma opção');\n  const [areaMeals, setAreaMeals] = useState([]);\n\n  const fetchMeals = async area => {\n    const response = await getMealByArea(area);\n    setAreaMeals(response);\n  };\n\n  const handleChange = ({\n    target\n  }) => {\n    const {\n      value\n    } = target;\n    setAreaValue(value);\n  };\n\n  useEffect(() => {\n    fetchMeals(areaValue);\n  }, [areaValue]);\n  const mealArray = areaMeals !== null ? areaMeals : foods;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    title: \"Explorar Origem\",\n    searchIcon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"explore-by-area-dropdown\",\n    value: areaValue,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Selecione uma op\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"All\"), mealAreas && mealAreas.map(({\n    strArea\n  }) => /*#__PURE__*/React.createElement(\"option\", {\n    \"data-testid\": `${strArea}-option`,\n    key: strArea,\n    value: strArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, strArea))), foods && mealArray.map((food, index) => /*#__PURE__*/React.createElement(Link, {\n    key: food.idMeal,\n    to: `/comidas/${food.idMeal}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": `${index}-recipe-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-card-img`,\n    src: food.strMealThumb,\n    alt: food.strMeal,\n    width: \"100px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, food.strMeal)))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ExplorarComidasArea;","map":{"version":3,"sources":["/home/administrador/Projects/sd-09-project-recipes-app/src/pages/ExplorarComidasArea.js"],"names":["React","useContext","useState","useEffect","Link","AppContext","getMealByArea","Header","Footer","ExplorarComidasArea","mealAreas","foods","areaValue","setAreaValue","areaMeals","setAreaMeals","fetchMeals","area","response","handleChange","target","value","mealArray","map","strArea","food","index","idMeal","strMealThumb","strMeal"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppContext } from '../context/AppContext';\nimport { getMealByArea } from '../services';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction ExplorarComidasArea() {\n  const { mealAreas, foods } = useContext(AppContext);\n  const [areaValue, setAreaValue] = useState('Selecione uma opção');\n  const [areaMeals, setAreaMeals] = useState([]);\n\n  const fetchMeals = async (area) => {\n    const response = await getMealByArea(area);\n    setAreaMeals(response);\n  };\n\n  const handleChange = ({ target }) => {\n    const { value } = target;\n    setAreaValue(value);\n  };\n\n  useEffect(() => {\n    fetchMeals(areaValue);\n  }, [areaValue]);\n\n  const mealArray = areaMeals !== null ? areaMeals : foods;\n\n  return (\n    <>\n      <Header title=\"Explorar Origem\" searchIcon />\n      <select\n        data-testid=\"explore-by-area-dropdown\"\n        value={ areaValue }\n        onChange={ handleChange }\n      >\n        <option disabled>Selecione uma opção</option>\n        <option value=\"All\">All</option>\n        { mealAreas && mealAreas.map(({ strArea }) => (\n          <option\n            data-testid={ `${strArea}-option` }\n            key={ strArea }\n            value={ strArea }\n          >\n            {strArea}\n          </option>\n        )) }\n      </select>\n      { foods && mealArray.map((food, index) => (\n        <Link key={ food.idMeal } to={ `/comidas/${food.idMeal}` }>\n          <div data-testid={ `${index}-recipe-card` }>\n            <img\n              data-testid={ `${index}-card-img` }\n              src={ food.strMealThumb }\n              alt={ food.strMeal }\n              width=\"100px\"\n            />\n            <p data-testid={ `${index}-card-name` }>{food.strMeal}</p>\n          </div>\n        </Link>\n      )) }\n      <Footer />\n    </>\n  );\n}\n\nexport default ExplorarComidasArea;\n"]},"metadata":{},"sourceType":"module"}