{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Projects/sd-09-project-recipes-app/src/pages/ProgressoComidas.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router';\nimport copy from 'clipboard-copy';\nimport CheckBoxProgress from '../components/CheckboxProgress';\nimport { AppContext } from '../context/AppContext';\nimport { getFoodIdDetails } from '../services';\nimport shareImg from \"../images/shareIcon.svg\";\nimport whiteHeartImg from \"../images/whiteHeartIcon.svg\";\nimport blackHeartImg from \"../images/blackHeartIcon.svg\";\n\nconst checkFavorite = (favoriteRecipes, recipeId) => {\n  if (favoriteRecipes.find(recipe => recipe.id === recipeId)) return true;\n  return false;\n};\n\nconst checkInitiatedMeals = (inProgressMeals, recipeId) => {\n  if (Object.keys(inProgressMeals).find(id => id === recipeId)) {\n    return true;\n  }\n\n  return false;\n};\n\nconst showInitiatedIng = (inProgress, recipeId) => Object.entries(inProgress[recipeId]).map((ing, index) => {\n  const info = `${ing[0]}:${ing[1]}`;\n  return /*#__PURE__*/React.createElement(\"p\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, info);\n});\n\nconst ProgressoComidas = () => {\n  const [stepsFinished, setStepsFinished] = useState(1);\n  const [idDetails, setIdDetails] = useState([]);\n  const {\n    id\n  } = useParams();\n  const [redirect, setRedirect] = useState(false);\n  const [linkShared, setLinkShared] = useState(false);\n  const [ingStatus, setIngStatus] = useState(JSON.parse(localStorage.getItem('inProgressMeals'))[id] || {});\n  const {\n    favoriteRecipe,\n    removeFromFavorite,\n    finishRecipe,\n    inProgressMeals,\n    handleProgressMeal,\n    favoriteRecipes\n  } = useContext(AppContext);\n  let stepsLimit = 1;\n\n  const getIngredients = () => {\n    const ingredients = Object.entries(idDetails).filter(details => {\n      const condition1 = details[0].includes('Ingredient');\n      const condition2 = details[1] !== '' && details[1] !== null;\n      return condition1 && condition2;\n    });\n    const measure = Object.entries(idDetails).filter(details => details[0].includes('Measure'));\n    const ingredientsArray = ingredients.reduce((acc, curr, index) => {\n      acc.push({\n        name: curr[1],\n        index\n      });\n      return acc;\n    }, []);\n    const measuresArray = measure.reduce((acc, curr, index) => {\n      acc.push({\n        measure: curr[1],\n        index\n      });\n      return acc;\n    }, []);\n    return ingredientsArray.map(ingredient => {\n      const measurament = measuresArray.filter(quantity => ingredient.index === quantity.index);\n      return {\n        name: ingredient.name,\n        measure: measurament[0].measure\n      };\n    });\n  };\n\n  const fetchDetails = async identification => {\n    const results = await getFoodIdDetails(identification);\n    setIdDetails(results);\n  };\n\n  const handleShare = () => {\n    const {\n      idMeal\n    } = idDetails;\n    copy(`http://localhost:3000/comidas/${idMeal}`);\n    setLinkShared(true);\n  };\n\n  const handleFavorite = () => {\n    const {\n      idMeal,\n      strMeal,\n      strArea,\n      strCategory,\n      strMealThumb\n    } = idDetails;\n\n    if (!checkFavorite(favoriteRecipes, idMeal)) {\n      favoriteRecipe({\n        id: idMeal,\n        type: 'comida',\n        area: strArea,\n        category: strCategory,\n        alcoholicOrNot: '',\n        name: strMeal,\n        image: strMealThumb\n      });\n    } else {\n      removeFromFavorite(idMeal);\n    }\n  };\n\n  const handleFinishRecipe = () => {\n    const {\n      strMealThumb,\n      strMeal,\n      strCategory,\n      idMeal,\n      strArea,\n      strTags\n    } = idDetails;\n    const doneInfos = {\n      id: idMeal,\n      type: 'comida',\n      area: strArea,\n      category: strCategory,\n      alcoholicOrNot: '',\n      name: strMeal,\n      image: strMealThumb,\n      doneDate: new Date().toLocaleDateString('pt-BR'),\n      tags: strTags === null ? [] : [...strTags.split(',')]\n    };\n    finishRecipe(doneInfos);\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    fetchDetails(id);\n  }, [id]);\n  if (!idDetails) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 26\n    }\n  }, \"Carregando...\");\n  const {\n    strMealThumb,\n    strMeal,\n    strCategory,\n    strInstructions,\n    idMeal\n  } = idDetails;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: strMealThumb,\n    alt: strMeal,\n    \"data-testid\": \"recipe-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, strMeal), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleShare(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"share-btn\",\n    src: shareImg,\n    alt: \"Compartilhar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  })), linkShared && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 23\n    }\n  }, \"Link copiado!\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleFavorite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: checkFavorite(favoriteRecipes, idMeal) ? blackHeartImg : whiteHeartImg,\n    alt: \"Favoritas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, strCategory), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ingredient-steps\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, idDetails && getIngredients().map((ingredient, index) => {\n    stepsLimit += 1;\n    return /*#__PURE__*/React.createElement(CheckBoxProgress, {\n      ingredient: ingredient,\n      index: index,\n      key: index,\n      setStepsFinished: setStepsFinished,\n      stepsFinished: stepsFinished,\n      inProgressRecipe: handleProgressMeal,\n      ingStatus: ingStatus,\n      setIngStatus: setIngStatus,\n      idRecipe: idMeal // type=\"meals\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    });\n  })), checkInitiatedMeals(inProgressMeals, idMeal) && showInitiatedIng(inProgressMeals, idMeal), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, strInstructions), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    disabled: stepsFinished < stepsLimit,\n    onClick: handleFinishRecipe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, \"Finalizar Receita\"), redirect ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/receitas-feitas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }) : null);\n};\n\nexport default ProgressoComidas;","map":{"version":3,"sources":["/home/administrador/Projects/sd-09-project-recipes-app/src/pages/ProgressoComidas.js"],"names":["React","useContext","useState","useEffect","Redirect","useParams","copy","CheckBoxProgress","AppContext","getFoodIdDetails","checkFavorite","favoriteRecipes","recipeId","find","recipe","id","checkInitiatedMeals","inProgressMeals","Object","keys","showInitiatedIng","inProgress","entries","map","ing","index","info","ProgressoComidas","stepsFinished","setStepsFinished","idDetails","setIdDetails","redirect","setRedirect","linkShared","setLinkShared","ingStatus","setIngStatus","JSON","parse","localStorage","getItem","favoriteRecipe","removeFromFavorite","finishRecipe","handleProgressMeal","stepsLimit","getIngredients","ingredients","filter","details","condition1","includes","condition2","measure","ingredientsArray","reduce","acc","curr","push","name","measuresArray","ingredient","measurament","quantity","fetchDetails","identification","results","handleShare","idMeal","handleFavorite","strMeal","strArea","strCategory","strMealThumb","type","area","category","alcoholicOrNot","image","handleFinishRecipe","strTags","doneInfos","doneDate","Date","toLocaleDateString","tags","split","strInstructions","shareImg","blackHeartImg","whiteHeartImg"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router';\nimport copy from 'clipboard-copy';\nimport CheckBoxProgress from '../components/CheckboxProgress';\nimport { AppContext } from '../context/AppContext';\nimport { getFoodIdDetails } from '../services';\nimport shareImg from '../images/shareIcon.svg';\nimport whiteHeartImg from '../images/whiteHeartIcon.svg';\nimport blackHeartImg from '../images/blackHeartIcon.svg';\n\nconst checkFavorite = (favoriteRecipes, recipeId) => {\n  if (favoriteRecipes.find((recipe) => recipe.id === recipeId)) return true;\n  return false;\n};\n\nconst checkInitiatedMeals = (inProgressMeals, recipeId) => {\n  if (Object.keys(inProgressMeals).find((id) => id === recipeId)) {\n    return true;\n  }\n  return false;\n};\n\nconst showInitiatedIng = (inProgress, recipeId) => (\n  Object.entries(inProgress[recipeId]).map((ing, index) => {\n    const info = `${ing[0]}:${ing[1]}`;\n    return (<p key={ index }>{info}</p>);\n  })\n);\n\nconst ProgressoComidas = () => {\n  const [stepsFinished, setStepsFinished] = useState(1);\n  const [idDetails, setIdDetails] = useState([]);\n  const { id } = useParams();\n  const [redirect, setRedirect] = useState(false);\n  const [linkShared, setLinkShared] = useState(false);\n  const [ingStatus, setIngStatus] = useState(\n    JSON.parse(localStorage.getItem('inProgressMeals'))[id]\n  || {},\n  );\n\n  const {\n    favoriteRecipe,\n    removeFromFavorite,\n    finishRecipe,\n    inProgressMeals,\n    handleProgressMeal,\n    favoriteRecipes,\n  } = useContext(AppContext);\n\n  let stepsLimit = 1;\n  const getIngredients = () => {\n    const ingredients = Object.entries(idDetails).filter((details) => {\n      const condition1 = details[0].includes('Ingredient');\n      const condition2 = details[1] !== '' && details[1] !== null;\n      return condition1 && condition2;\n    });\n    const measure = Object.entries(idDetails)\n      .filter((details) => details[0].includes('Measure'));\n    const ingredientsArray = ingredients.reduce((acc, curr, index) => {\n      acc.push({ name: curr[1], index });\n      return acc;\n    }, []);\n    const measuresArray = measure.reduce((acc, curr, index) => {\n      acc.push({ measure: curr[1], index });\n      return acc;\n    }, []);\n    return ingredientsArray.map((ingredient) => {\n      const measurament = measuresArray\n        .filter((quantity) => ingredient.index === quantity.index);\n      return { name: ingredient.name, measure: measurament[0].measure };\n    });\n  };\n  const fetchDetails = async (identification) => {\n    const results = await getFoodIdDetails(identification);\n    setIdDetails(results);\n  };\n  const handleShare = () => {\n    const { idMeal } = idDetails;\n    copy(`http://localhost:3000/comidas/${idMeal}`);\n    setLinkShared(true);\n  };\n\n  const handleFavorite = () => {\n    const { idMeal, strMeal, strArea, strCategory, strMealThumb } = idDetails;\n    if (!checkFavorite(favoriteRecipes, idMeal)) {\n      favoriteRecipe({\n        id: idMeal,\n        type: 'comida',\n        area: strArea,\n        category: strCategory,\n        alcoholicOrNot: '',\n        name: strMeal,\n        image: strMealThumb,\n      });\n    } else {\n      removeFromFavorite(idMeal);\n    }\n  };\n\n  const handleFinishRecipe = () => {\n    const {\n      strMealThumb,\n      strMeal, strCategory, idMeal, strArea, strTags } = idDetails;\n    const doneInfos = {\n      id: idMeal,\n      type: 'comida',\n      area: strArea,\n      category: strCategory,\n      alcoholicOrNot: '',\n      name: strMeal,\n      image: strMealThumb,\n      doneDate: new Date().toLocaleDateString('pt-BR'),\n      tags: strTags === null ? [] : [...strTags.split(',')],\n    };\n    finishRecipe(doneInfos);\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    fetchDetails(id);\n  }, [id]);\n\n  if (!idDetails) return <p>Carregando...</p>;\n  const {\n    strMealThumb,\n    strMeal, strCategory, strInstructions, idMeal } = idDetails;\n  return (\n    <div>\n      <img src={ strMealThumb } alt={ strMeal } data-testid=\"recipe-photo\" />\n      <h2 data-testid=\"recipe-title\">{strMeal}</h2>\n      <button type=\"button\" onClick={ () => handleShare() }>\n        <img data-testid=\"share-btn\" src={ shareImg } alt=\"Compartilhar\" />\n      </button>\n      { linkShared && <p>Link copiado!</p> }\n      <button type=\"button\" onClick={ handleFavorite }>\n        <img\n          data-testid=\"favorite-btn\"\n          src={ checkFavorite(favoriteRecipes, idMeal) ? blackHeartImg : whiteHeartImg }\n          alt=\"Favoritas\"\n        />\n      </button>\n      <p data-testid=\"recipe-category\">{strCategory}</p>\n      <div className=\"ingredient-steps\">\n        { idDetails && getIngredients().map((ingredient, index) => {\n          stepsLimit += 1;\n          return (\n            <CheckBoxProgress\n              ingredient={ ingredient }\n              index={ index }\n              key={ index }\n              setStepsFinished={ setStepsFinished }\n              stepsFinished={ stepsFinished }\n              inProgressRecipe={ handleProgressMeal }\n              ingStatus={ ingStatus }\n              setIngStatus={ setIngStatus }\n              idRecipe={ idMeal }\n              // type=\"meals\"\n            />);\n        }) }\n      </div>\n      { checkInitiatedMeals(inProgressMeals, idMeal)\n      && showInitiatedIng(inProgressMeals, idMeal)}\n      <p data-testid=\"instructions\">{strInstructions}</p>\n      <button\n        type=\"button\"\n        data-testid=\"finish-recipe-btn\"\n        disabled={ stepsFinished < stepsLimit }\n        onClick={ handleFinishRecipe }\n      >\n        Finalizar Receita\n      </button>\n      {redirect ? <Redirect to=\"/receitas-feitas\" /> : null}\n    </div>\n  );\n};\n\nexport default ProgressoComidas;\n"]},"metadata":{},"sourceType":"module"}