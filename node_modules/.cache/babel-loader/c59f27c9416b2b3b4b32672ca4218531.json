{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Projects/sd-09-project-recipes-app/src/components/CheckboxProgress.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../CSS/ProgressoBebidas.css';\n\nconst CheckBoxProgress = ({\n  ingredient,\n  index,\n  setStepsFinished,\n  stepsFinished,\n  ingredientsStatus,\n  setIngredientsStatus,\n  inProgressRecipe,\n  idRecipe\n}) => {\n  const [strikeThrough, setStrikeThrough] = useState(false);\n  const ing = `${ingredient.name} ${ingredient.measure === null ? '' : ingredient.measure}`; // const toLocalStorage = () => {\n  //   const infoProgress = { [idRecipe]: ingredientsStatus };\n  //   inProgressDrink(infoProgress);\n  // };\n\n  const checkStep = () => {\n    if (!strikeThrough) {\n      setStrikeThrough(!strikeThrough);\n      setStepsFinished(stepsFinished + 1); // state do progresso\n\n      inProgressRecipe({ ...ingredientsStatus,\n        [ing]: true\n      });\n      setIngredientsStatus({ ...ingredientsStatus,\n        [ing]: true\n      }); // const infoProgress = { [idRecipe]: [ing] };\n      // localstorage\n      // const twoSeconds = 2000;\n      // setInterval(toLocalStorage, twoSeconds);\n    }\n\n    if (strikeThrough) {\n      setStrikeThrough(!strikeThrough);\n      setStepsFinished(stepsFinished - 1);\n      inProgressRecipe({ ...ingredientsStatus,\n        [ing]: true\n      });\n      setIngredientsStatus({ ...ingredientsStatus,\n        [ing]: true\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: index,\n    key: ingredient.name,\n    className: strikeThrough ? 'cross' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, ing, /*#__PURE__*/React.createElement(\"input\", {\n    id: index,\n    type: \"checkbox\",\n    \"data-testid\": `${index}-ingredient-step`,\n    onClick: checkStep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\n\nCheckBoxProgress.propTypes = {\n  ingredient: PropTypes.shape({\n    name: PropTypes.string,\n    measure: PropTypes.string\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  stepsFinished: PropTypes.number.isRequired,\n  setStepsFinished: PropTypes.func.isRequired,\n  ingredientsStatus: PropTypes.shape({}).isRequired,\n  setIngredientsStatus: PropTypes.func.isRequired\n};\nexport default CheckBoxProgress;","map":{"version":3,"sources":["/home/administrador/Projects/sd-09-project-recipes-app/src/components/CheckboxProgress.js"],"names":["React","useState","PropTypes","CheckBoxProgress","ingredient","index","setStepsFinished","stepsFinished","ingredientsStatus","setIngredientsStatus","inProgressRecipe","idRecipe","strikeThrough","setStrikeThrough","ing","name","measure","checkStep","propTypes","shape","string","isRequired","number","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,6BAAP;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA,gBAArB;AACxBC,EAAAA,aADwB;AACTC,EAAAA,iBADS;AAExBC,EAAAA,oBAFwB;AAEFC,EAAAA,gBAFE;AAEgBC,EAAAA;AAFhB,CAAD,KAEgC;AACvD,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAMa,GAAG,GAAI,GAAEV,UAAU,CAACW,IAAK,IAAGX,UAAU,CAACY,OAAX,KAAuB,IAAvB,GAC9B,EAD8B,GACzBZ,UAAU,CAACY,OAAQ,EAD5B,CAFuD,CAIvD;AACA;AACA;AACA;;AACA,QAAMC,SAAS,GAAG,MAAM;AACtB,QAAI,CAACL,aAAL,EAAoB;AAClBC,MAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACAN,MAAAA,gBAAgB,CAACC,aAAa,GAAG,CAAjB,CAAhB,CAFkB,CAGlB;;AACAG,MAAAA,gBAAgB,CAAC,EAAE,GAAGF,iBAAL;AAAwB,SAACM,GAAD,GAAO;AAA/B,OAAD,CAAhB;AACAL,MAAAA,oBAAoB,CAAC,EAAE,GAAGD,iBAAL;AAAwB,SAACM,GAAD,GAAO;AAA/B,OAAD,CAApB,CALkB,CAMlB;AACA;AACA;AACA;AACD;;AACD,QAAIF,aAAJ,EAAmB;AACjBC,MAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACAN,MAAAA,gBAAgB,CAACC,aAAa,GAAG,CAAjB,CAAhB;AACAG,MAAAA,gBAAgB,CAAC,EAAE,GAAGF,iBAAL;AAAwB,SAACM,GAAD,GAAO;AAA/B,OAAD,CAAhB;AACAL,MAAAA,oBAAoB,CAAC,EAAE,GAAGD,iBAAL;AAAwB,SAACM,GAAD,GAAO;AAA/B,OAAD,CAApB;AACD;AACF,GAlBD;;AAmBA,sBACE;AACE,IAAA,OAAO,EAAGT,KADZ;AAEE,IAAA,GAAG,EAAGD,UAAU,CAACW,IAFnB;AAGE,IAAA,SAAS,EAAGH,aAAa,GAAG,OAAH,GAAa,IAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGE,GALH,eAME;AACE,IAAA,EAAE,EAAGT,KADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,mBAAe,GAAEA,KAAM,kBAHzB;AAIE,IAAA,OAAO,EAAGY,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAeD,CA5CD;;AA8CAd,gBAAgB,CAACe,SAAjB,GAA6B;AAC3Bd,EAAAA,UAAU,EAAEF,SAAS,CAACiB,KAAV,CAAgB;AAC1BJ,IAAAA,IAAI,EAAEb,SAAS,CAACkB,MADU;AAE1BJ,IAAAA,OAAO,EAAEd,SAAS,CAACkB;AAFO,GAAhB,EAGTC,UAJwB;AAK3BhB,EAAAA,KAAK,EAAEH,SAAS,CAACoB,MAAV,CAAiBD,UALG;AAM3Bd,EAAAA,aAAa,EAAEL,SAAS,CAACoB,MAAV,CAAiBD,UANL;AAO3Bf,EAAAA,gBAAgB,EAAEJ,SAAS,CAACqB,IAAV,CAAeF,UAPN;AAQ3Bb,EAAAA,iBAAiB,EAAEN,SAAS,CAACiB,KAAV,CAAgB,EAAhB,EAAoBE,UARZ;AAS3BZ,EAAAA,oBAAoB,EAAEP,SAAS,CAACqB,IAAV,CAAeF;AATV,CAA7B;AAYA,eAAelB,gBAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../CSS/ProgressoBebidas.css';\n\nconst CheckBoxProgress = ({ ingredient, index, setStepsFinished,\n  stepsFinished, ingredientsStatus,\n  setIngredientsStatus, inProgressRecipe, idRecipe }) => {\n  const [strikeThrough, setStrikeThrough] = useState(false);\n  const ing = `${ingredient.name} ${ingredient.measure === null\n    ? '' : ingredient.measure}`;\n  // const toLocalStorage = () => {\n  //   const infoProgress = { [idRecipe]: ingredientsStatus };\n  //   inProgressDrink(infoProgress);\n  // };\n  const checkStep = () => {\n    if (!strikeThrough) {\n      setStrikeThrough(!strikeThrough);\n      setStepsFinished(stepsFinished + 1);\n      // state do progresso\n      inProgressRecipe({ ...ingredientsStatus, [ing]: true });\n      setIngredientsStatus({ ...ingredientsStatus, [ing]: true });\n      // const infoProgress = { [idRecipe]: [ing] };\n      // localstorage\n      // const twoSeconds = 2000;\n      // setInterval(toLocalStorage, twoSeconds);\n    }\n    if (strikeThrough) {\n      setStrikeThrough(!strikeThrough);\n      setStepsFinished(stepsFinished - 1);\n      inProgressRecipe({ ...ingredientsStatus, [ing]: true });\n      setIngredientsStatus({ ...ingredientsStatus, [ing]: true });\n    }\n  };\n  return (\n    <label\n      htmlFor={ index }\n      key={ ingredient.name }\n      className={ strikeThrough ? 'cross' : null }\n    >\n      {ing}\n      <input\n        id={ index }\n        type=\"checkbox\"\n        data-testid={ `${index}-ingredient-step` }\n        onClick={ checkStep }\n      />\n    </label>\n  );\n};\n\nCheckBoxProgress.propTypes = {\n  ingredient: PropTypes.shape({\n    name: PropTypes.string,\n    measure: PropTypes.string,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  stepsFinished: PropTypes.number.isRequired,\n  setStepsFinished: PropTypes.func.isRequired,\n  ingredientsStatus: PropTypes.shape({}).isRequired,\n  setIngredientsStatus: PropTypes.func.isRequired,\n};\n\nexport default CheckBoxProgress;\n"]},"metadata":{},"sourceType":"module"}