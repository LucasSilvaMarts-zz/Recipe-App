{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Projects/sd-09-project-recipes-app/src/pages/ProgressoBebidas.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router';\nimport copy from 'clipboard-copy';\nimport CheckBoxProgress from '../components/CheckboxProgress';\nimport { AppContext } from '../context/AppContext';\nimport { getDrinkIdDetails } from '../services';\nimport shareImg from \"../images/shareIcon.svg\";\nimport whiteHeartImg from \"../images/whiteHeartIcon.svg\";\nimport blackHeartImg from \"../images/blackHeartIcon.svg\";\n\nconst checkFavorite = (favoriteRecipes, recipeId) => {\n  if (favoriteRecipes.find(recipe => recipe.id === recipeId)) return true;\n  return false;\n};\n\nconst ProgressoBebidas = () => {\n  const [idDetails, setIdDetails] = useState([]);\n  const {\n    id\n  } = useParams();\n  const [redirect, setRedirect] = useState(false);\n  const [linkShared, setLinkShared] = useState(false);\n  const [ingStatus, setIngStatus] = useState(JSON.parse(localStorage.getItem('inProgressDrinks'))[id] || {});\n  const doneLength = Object.values(ingStatus).filter(status => status === true).length + 1;\n  const [stepsFinished, setStepsFinished] = useState(doneLength);\n  const {\n    favoriteRecipe,\n    removeFromFavorite,\n    finishRecipe,\n    favoriteRecipes,\n    handleProgressDrink\n  } = useContext(AppContext);\n  let stepsLimit = 1;\n\n  const getIngredients = () => {\n    const ingredients = Object.entries(idDetails).filter(details => {\n      const condition1 = details[0].includes('Ingredient');\n      const condition2 = details[1] !== '' && details[1] !== null;\n      return condition1 && condition2;\n    });\n    const measure = Object.entries(idDetails).filter(details => details[0].includes('Measure'));\n    const ingredientsArray = ingredients.reduce((acc, curr, index) => {\n      acc.push({\n        name: curr[1],\n        index\n      });\n      return acc;\n    }, []);\n    const measuresArray = measure.reduce((acc, curr, index) => {\n      acc.push({\n        measure: curr[1],\n        index\n      });\n      return acc;\n    }, []);\n    return ingredientsArray.map(ingredient => {\n      const measurament = measuresArray.filter(quantity => ingredient.index === quantity.index);\n      return {\n        name: ingredient.name,\n        measure: measurament[0].measure\n      };\n    });\n  };\n\n  const fetchDetails = async identification => {\n    const results = await getDrinkIdDetails(identification);\n    setIdDetails(results);\n  };\n\n  const handleShare = () => {\n    const {\n      idDrink\n    } = idDetails;\n    copy(`http://localhost:3000/bebidas/${idDrink}`);\n    setLinkShared(true);\n  };\n\n  const handleFavorite = () => {\n    const {\n      idDrink,\n      strDrink,\n      strAlcoholic,\n      strCategory,\n      strDrinkThumb\n    } = idDetails;\n\n    if (!checkFavorite(favoriteRecipes, idDrink)) {\n      favoriteRecipe({\n        id: idDrink,\n        type: 'bebida',\n        area: '',\n        category: strCategory,\n        alcoholicOrNot: strAlcoholic,\n        name: strDrink,\n        image: strDrinkThumb\n      });\n    } else {\n      removeFromFavorite(idDrink);\n    }\n  };\n\n  const handleFinishRecipe = () => {\n    const {\n      strDrinkThumb,\n      strDrink,\n      strCategory,\n      idDrink,\n      strAlcoholic\n    } = idDetails;\n    const doneInfos = {\n      id: idDrink,\n      type: 'bebida',\n      area: '',\n      category: strCategory,\n      alcoholicOrNot: strAlcoholic,\n      name: strDrink,\n      image: strDrinkThumb,\n      doneDate: new Date().toLocaleDateString('pt-BR'),\n      tags: []\n    };\n    finishRecipe(doneInfos);\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    fetchDetails(id);\n  }, [id]);\n  if (!idDetails) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 26\n    }\n  }, \"Carregando...\");\n  const {\n    strDrinkThumb,\n    strDrink,\n    strCategory,\n    strInstructions,\n    idDrink\n  } = idDetails;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: strDrinkThumb,\n    alt: strDrink,\n    \"data-testid\": \"recipe-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, strDrink), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleShare(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"share-btn\",\n    src: shareImg,\n    alt: \"Compartilhar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  })), linkShared && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 23\n    }\n  }, \"Link copiado!\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleFavorite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: checkFavorite(favoriteRecipes, idDrink) ? blackHeartImg : whiteHeartImg,\n    alt: \"Favoritas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, strCategory), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ingredient-steps\",\n    \"data-testid\": \"ingredient-steps\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, idDetails && getIngredients().map((ingredient, index) => {\n    stepsLimit += 1;\n    return /*#__PURE__*/React.createElement(CheckBoxProgress, {\n      ingredient: ingredient,\n      index: index,\n      key: index,\n      setStepsFinished: setStepsFinished,\n      stepsFinished: stepsFinished // ingredientsUsed={ handleIngredientsUsed }\n      ,\n      inProgressRecipe: handleProgressDrink,\n      ingStatus: ingStatus,\n      setIngStatus: setIngStatus,\n      idRecipe: idDrink // type=\"cocktails\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, strInstructions), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    disabled: stepsFinished < stepsLimit,\n    onClick: handleFinishRecipe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, \"Finalizar Receita\"), redirect ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/receitas-feitas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  }) : null);\n};\n\nexport default ProgressoBebidas;","map":{"version":3,"sources":["/home/administrador/Projects/sd-09-project-recipes-app/src/pages/ProgressoBebidas.js"],"names":["React","useContext","useState","useEffect","Redirect","useParams","copy","CheckBoxProgress","AppContext","getDrinkIdDetails","checkFavorite","favoriteRecipes","recipeId","find","recipe","id","ProgressoBebidas","idDetails","setIdDetails","redirect","setRedirect","linkShared","setLinkShared","ingStatus","setIngStatus","JSON","parse","localStorage","getItem","doneLength","Object","values","filter","status","length","stepsFinished","setStepsFinished","favoriteRecipe","removeFromFavorite","finishRecipe","handleProgressDrink","stepsLimit","getIngredients","ingredients","entries","details","condition1","includes","condition2","measure","ingredientsArray","reduce","acc","curr","index","push","name","measuresArray","map","ingredient","measurament","quantity","fetchDetails","identification","results","handleShare","idDrink","handleFavorite","strDrink","strAlcoholic","strCategory","strDrinkThumb","type","area","category","alcoholicOrNot","image","handleFinishRecipe","doneInfos","doneDate","Date","toLocaleDateString","tags","strInstructions","shareImg","blackHeartImg","whiteHeartImg"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router';\nimport copy from 'clipboard-copy';\nimport CheckBoxProgress from '../components/CheckboxProgress';\nimport { AppContext } from '../context/AppContext';\nimport { getDrinkIdDetails } from '../services';\nimport shareImg from '../images/shareIcon.svg';\nimport whiteHeartImg from '../images/whiteHeartIcon.svg';\nimport blackHeartImg from '../images/blackHeartIcon.svg';\n\nconst checkFavorite = (favoriteRecipes, recipeId) => {\n  if (favoriteRecipes.find((recipe) => recipe.id === recipeId)) return true;\n  return false;\n};\n\nconst ProgressoBebidas = () => {\n  const [idDetails, setIdDetails] = useState([]);\n  const { id } = useParams();\n  const [redirect, setRedirect] = useState(false);\n  const [linkShared, setLinkShared] = useState(false);\n  const [ingStatus, setIngStatus] = useState(\n    JSON.parse(localStorage.getItem('inProgressDrinks'))[id]\n    || {},\n  );\n  const doneLength = Object.values(ingStatus).filter(\n    (status) => status === true,\n  ).length + 1;\n  const [stepsFinished, setStepsFinished] = useState(doneLength);\n  const {\n    favoriteRecipe,\n    removeFromFavorite,\n    finishRecipe,\n    favoriteRecipes,\n    handleProgressDrink,\n  } = useContext(AppContext);\n\n  let stepsLimit = 1;\n  const getIngredients = () => {\n    const ingredients = Object.entries(idDetails).filter((details) => {\n      const condition1 = details[0].includes('Ingredient');\n      const condition2 = details[1] !== '' && details[1] !== null;\n      return condition1 && condition2;\n    });\n    const measure = Object.entries(idDetails)\n      .filter((details) => details[0].includes('Measure'));\n    const ingredientsArray = ingredients.reduce((acc, curr, index) => {\n      acc.push({ name: curr[1], index });\n      return acc;\n    }, []);\n    const measuresArray = measure.reduce((acc, curr, index) => {\n      acc.push({ measure: curr[1], index });\n      return acc;\n    }, []);\n    return ingredientsArray.map((ingredient) => {\n      const measurament = measuresArray\n        .filter((quantity) => ingredient.index === quantity.index);\n      return { name: ingredient.name, measure: measurament[0].measure };\n    });\n  };\n  const fetchDetails = async (identification) => {\n    const results = await getDrinkIdDetails(identification);\n    setIdDetails(results);\n  };\n  const handleShare = () => {\n    const { idDrink } = idDetails;\n    copy(`http://localhost:3000/bebidas/${idDrink}`);\n    setLinkShared(true);\n  };\n\n  const handleFavorite = () => {\n    const { idDrink, strDrink, strAlcoholic, strCategory, strDrinkThumb } = idDetails;\n    if (!checkFavorite(favoriteRecipes, idDrink)) {\n      favoriteRecipe({\n        id: idDrink,\n        type: 'bebida',\n        area: '',\n        category: strCategory,\n        alcoholicOrNot: strAlcoholic,\n        name: strDrink,\n        image: strDrinkThumb,\n      });\n    } else {\n      removeFromFavorite(idDrink);\n    }\n  };\n\n  const handleFinishRecipe = () => {\n    const {\n      strDrinkThumb,\n      strDrink, strCategory, idDrink, strAlcoholic } = idDetails;\n    const doneInfos = {\n      id: idDrink,\n      type: 'bebida',\n      area: '',\n      category: strCategory,\n      alcoholicOrNot: strAlcoholic,\n      name: strDrink,\n      image: strDrinkThumb,\n      doneDate: new Date().toLocaleDateString('pt-BR'),\n      tags: [],\n    };\n    finishRecipe(doneInfos);\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    fetchDetails(id);\n  }, [id]);\n\n  if (!idDetails) return <p>Carregando...</p>;\n  const { strDrinkThumb,\n    strDrink, strCategory, strInstructions, idDrink } = idDetails;\n\n  return (\n    <div>\n      <img src={ strDrinkThumb } alt={ strDrink } data-testid=\"recipe-photo\" />\n      <h2 data-testid=\"recipe-title\">{strDrink}</h2>\n      <button type=\"button\" onClick={ () => handleShare() }>\n        <img data-testid=\"share-btn\" src={ shareImg } alt=\"Compartilhar\" />\n      </button>\n      { linkShared && <p>Link copiado!</p> }\n      <button type=\"button\" onClick={ handleFavorite }>\n        <img\n          data-testid=\"favorite-btn\"\n          src={ checkFavorite(favoriteRecipes, idDrink) ? blackHeartImg : whiteHeartImg }\n          alt=\"Favoritas\"\n        />\n      </button>\n      <p data-testid=\"recipe-category\">{strCategory}</p>\n      <div className=\"ingredient-steps\" data-testid=\"ingredient-steps\">\n        { idDetails && getIngredients().map((ingredient, index) => {\n          stepsLimit += 1;\n          return (\n            <CheckBoxProgress\n              ingredient={ ingredient }\n              index={ index }\n              key={ index }\n              setStepsFinished={ setStepsFinished }\n              stepsFinished={ stepsFinished }\n              // ingredientsUsed={ handleIngredientsUsed }\n              inProgressRecipe={ handleProgressDrink }\n              ingStatus={ ingStatus }\n              setIngStatus={ setIngStatus }\n              idRecipe={ idDrink }\n              // type=\"cocktails\"\n            />\n          );\n        }) }\n      </div>\n      <p data-testid=\"instructions\">{strInstructions}</p>\n      <button\n        type=\"button\"\n        data-testid=\"finish-recipe-btn\"\n        disabled={ stepsFinished < stepsLimit }\n        onClick={ handleFinishRecipe }\n      >\n        Finalizar Receita\n      </button>\n      {redirect ? <Redirect to=\"/receitas-feitas\" /> : null}\n    </div>\n  );\n};\n\nexport default ProgressoBebidas;\n"]},"metadata":{},"sourceType":"module"}