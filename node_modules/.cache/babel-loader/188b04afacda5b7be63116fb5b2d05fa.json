{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Projects/sd-09-project-recipes-app/src/components/CheckboxProgress.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../CSS/ProgressoBebidas.css';\n\nconst CheckBoxProgress = ({\n  ingredient,\n  index,\n  setStepsFinished,\n  stepsFinished,\n  storeInProgress\n}) => {\n  const [strikeThrough, setStrikeThrough] = useState(false);\n\n  const checkStep = () => {\n    if (!strikeThrough) {\n      setStrikeThrough(!strikeThrough);\n      setStepsFinished(stepsFinished + 1);\n    }\n\n    if (strikeThrough) {\n      setStrikeThrough(!strikeThrough);\n      setStepsFinished(stepsFinished - 1);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: index,\n    key: ingredient.name,\n    className: strikeThrough ? 'cross' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, `${ingredient.name} ${ingredient.measure === null ? '' : ingredient.measure}`, /*#__PURE__*/React.createElement(\"input\", {\n    id: index,\n    type: \"checkbox\",\n    \"data-testid\": `${index}-ingredient-step`,\n    onClick: checkStep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n};\n\nCheckBoxProgress.propTypes = {\n  ingredient: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    measure: PropTypes.string.isRequired\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  stepsFinished: PropTypes.number.isRequired,\n  setStepsFinished: PropTypes.func.isRequired\n};\nexport default CheckBoxProgress;","map":{"version":3,"sources":["/home/administrador/Projects/sd-09-project-recipes-app/src/components/CheckboxProgress.js"],"names":["React","useState","PropTypes","CheckBoxProgress","ingredient","index","setStepsFinished","stepsFinished","storeInProgress","strikeThrough","setStrikeThrough","checkStep","name","measure","propTypes","shape","string","isRequired","number","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,6BAAP;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA,gBAArB;AAAuCC,EAAAA,aAAvC;AAAsDC,EAAAA;AAAtD,CAAD,KAA6E;AACpG,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,KAAD,CAAlD;;AACA,QAAMU,SAAS,GAAG,MAAM;AACtB,QAAI,CAACF,aAAL,EAAoB;AAClBC,MAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACAH,MAAAA,gBAAgB,CAACC,aAAa,GAAG,CAAjB,CAAhB;AACD;;AACD,QAAIE,aAAJ,EAAmB;AACjBC,MAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACAH,MAAAA,gBAAgB,CAACC,aAAa,GAAG,CAAjB,CAAhB;AACD;AACF,GATD;;AAUA,sBACE;AACE,IAAA,OAAO,EAAGF,KADZ;AAEE,IAAA,GAAG,EAAGD,UAAU,CAACQ,IAFnB;AAGE,IAAA,SAAS,EAAGH,aAAa,GAAG,OAAH,GAAa,IAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,GAAEL,UAAU,CAACQ,IAAK,IAAGR,UAAU,CAACS,OAAX,KAAuB,IAAvB,GACnB,EADmB,GACdT,UAAU,CAACS,OAAQ,EAN9B,eAOE;AACE,IAAA,EAAE,EAAGR,KADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,mBAAe,GAAEA,KAAM,kBAHzB;AAIE,IAAA,OAAO,EAAGM,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAgBD,CA5BD;;AA8BAR,gBAAgB,CAACW,SAAjB,GAA6B;AAC3BV,EAAAA,UAAU,EAAEF,SAAS,CAACa,KAAV,CAAgB;AAC1BH,IAAAA,IAAI,EAAEV,SAAS,CAACc,MAAV,CAAiBC,UADG;AAE1BJ,IAAAA,OAAO,EAAEX,SAAS,CAACc,MAAV,CAAiBC;AAFA,GAAhB,EAGTA,UAJwB;AAK3BZ,EAAAA,KAAK,EAAEH,SAAS,CAACgB,MAAV,CAAiBD,UALG;AAM3BV,EAAAA,aAAa,EAAEL,SAAS,CAACgB,MAAV,CAAiBD,UANL;AAO3BX,EAAAA,gBAAgB,EAAEJ,SAAS,CAACiB,IAAV,CAAeF;AAPN,CAA7B;AAUA,eAAed,gBAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../CSS/ProgressoBebidas.css';\n\nconst CheckBoxProgress = ({ ingredient, index, setStepsFinished, stepsFinished, storeInProgress }) => {\n  const [strikeThrough, setStrikeThrough] = useState(false);\n  const checkStep = () => {\n    if (!strikeThrough) {\n      setStrikeThrough(!strikeThrough);\n      setStepsFinished(stepsFinished + 1);\n    }\n    if (strikeThrough) {\n      setStrikeThrough(!strikeThrough);\n      setStepsFinished(stepsFinished - 1);\n    }\n  };\n  return (\n    <label\n      htmlFor={ index }\n      key={ ingredient.name }\n      className={ strikeThrough ? 'cross' : null }\n    >\n      {`${ingredient.name} ${ingredient.measure === null\n        ? '' : ingredient.measure}`}\n      <input\n        id={ index }\n        type=\"checkbox\"\n        data-testid={ `${index}-ingredient-step` }\n        onClick={ checkStep }\n      />\n    </label>\n  );\n};\n\nCheckBoxProgress.propTypes = {\n  ingredient: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    measure: PropTypes.string.isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  stepsFinished: PropTypes.number.isRequired,\n  setStepsFinished: PropTypes.func.isRequired,\n};\n\nexport default CheckBoxProgress;\n"]},"metadata":{},"sourceType":"module"}