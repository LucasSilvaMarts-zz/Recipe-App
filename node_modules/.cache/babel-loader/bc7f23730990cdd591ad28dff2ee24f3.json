{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Projects/sd-09-project-recipes-app/src/pages/DetalhesBebida.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams, Link, useLocation } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport { getDrinkIdDetails, getFoods } from '../services';\nimport { AppContext } from '../context/AppContext';\nimport shareImg from \"../images/shareIcon.svg\";\nimport whiteHeartImg from \"../images/whiteHeartIcon.svg\";\nimport blackHeartImg from \"../images/blackHeartIcon.svg\";\nconst doneRecipes = JSON.parse(localStorage.getItem('doneRecipes')) || [];\nconst inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes')) || {};\n\nconst checkDoneRecipes = recipeId => {\n  if (doneRecipes.find(recipe => recipe.id === recipeId)) {\n    return true;\n  }\n\n  return false;\n};\n\nconst handleFavorite = (idDetails, favoriteRecipe, removeFromFavorite, checkFavorite) => {\n  const {\n    idDrink,\n    strAlcoholic,\n    strCategory,\n    strDrink,\n    strDrinkThumb\n  } = idDetails;\n\n  if (!checkFavorite(idDrink)) {\n    favoriteRecipe({\n      id: idDrink,\n      type: 'bebida',\n      area: '',\n      category: strCategory,\n      alcoholicOrNot: strAlcoholic,\n      name: strDrink,\n      image: strDrinkThumb\n    });\n  } else {\n    removeFromFavorite(idDrink);\n  }\n};\n\nconst handleButtonName = id => {\n  if (inProgressRecipes) {\n    if (inProgressRecipes.cocktails) {\n      return inProgressRecipes.cocktails[id] ? 'Continuar Receita' : 'Iniciar Receita';\n    }\n\n    return 'Iniciar Receita';\n  }\n};\n\nconst DetalhesBebida = () => {\n  const {\n    favoriteRecipe,\n    removeFromFavorite\n  } = useContext(AppContext);\n  const {\n    id\n  } = useParams();\n  const {\n    pathname\n  } = useLocation();\n  const [idDetails, setIdDetails] = useState([]);\n  const [linkShared, setLinkShared] = useState(false);\n  const [recomendations, setRecomendations] = useState([]);\n\n  const getIngredients = () => {\n    const ingredients = Object.entries(idDetails).filter(details => {\n      const condition1 = details[0].includes('Ingredient');\n      const condition2 = details[1] !== '' && details[1] !== null;\n      return condition1 && condition2;\n    });\n    const measure = Object.entries(idDetails).filter(details => details[0].includes('Measure'));\n    const ingredientsArray = ingredients.reduce((acc, curr, index) => {\n      acc.push({\n        name: curr[1],\n        index\n      });\n      return acc;\n    }, []);\n    const measuresArray = measure.reduce((acc, curr, index) => {\n      acc.push({\n        measure: curr[1],\n        index\n      });\n      return acc;\n    }, []);\n    return ingredientsArray.map(ingredient => {\n      const measurament = measuresArray.filter(quantity => ingredient.index === quantity.index);\n      return {\n        name: ingredient.name,\n        measure: measurament[0].measure\n      };\n    });\n  };\n\n  const fetchDetails = async identification => {\n    const results = await getDrinkIdDetails(identification);\n    setIdDetails(results);\n  };\n\n  const fetchRecomendations = async () => {\n    const MAX_RECOMENDATION = 6;\n    const results = await getFoods();\n    setRecomendations(results.splice(0, MAX_RECOMENDATION));\n  };\n\n  const checkFavorite = recipeId => {\n    const favorites = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n    if (favorites.find(recipe => recipe.id === recipeId)) return true;\n    return false;\n  };\n\n  const handleShare = () => {\n    copy(`http://localhost:3000${pathname}`);\n    setLinkShared(true);\n  };\n\n  useEffect(() => {\n    fetchDetails(id);\n    fetchRecomendations();\n  }, [id]);\n  if (!idDetails || !recomendations) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 45\n    }\n  }, \"Carregando...\");\n  const {\n    strDrinkThumb,\n    strDrink,\n    strAlcoholic,\n    strInstructions,\n    idDrink\n  } = idDetails;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: strDrinkThumb,\n    alt: strDrink,\n    \"data-testid\": \"recipe-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, strDrink), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleShare(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"share-btn\",\n    src: shareImg,\n    alt: \"Compartilhar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  })), linkShared && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 23\n    }\n  }, \"Link copiado!\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleFavorite(idDetails, favoriteRecipe, removeFromFavorite, checkFavorite),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: checkFavorite(idDrink) ? blackHeartImg : whiteHeartImg,\n    alt: \"Favoritar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, strAlcoholic), idDetails && getIngredients().map((ingredient, index) => /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-ingredient-name-and-measure`,\n    key: ingredient.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, `${ingredient.name} ${ingredient.measure === null ? '' : ingredient.measure}`)), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, strInstructions), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, \"Comidas Recomendadas\"), recomendations.map((food, index) => /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": `${index}-recomendation-card`,\n    key: food.idMeal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-recomendation-img`,\n    src: food.strMealThumb,\n    alt: food.strMeal,\n    width: \"100px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-recomendation-title`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, food.strMeal))), !checkDoneRecipes(idDrink) && /*#__PURE__*/React.createElement(Link, {\n    to: `${id}/in-progress`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"start-recipe-btn\",\n    className: \"start-recipe-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, handleButtonName(idDrink))));\n};\n\nexport default DetalhesBebida;","map":{"version":3,"sources":["/home/administrador/Projects/sd-09-project-recipes-app/src/pages/DetalhesBebida.js"],"names":["React","useState","useEffect","useContext","useParams","Link","useLocation","copy","getDrinkIdDetails","getFoods","AppContext","doneRecipes","JSON","parse","localStorage","getItem","inProgressRecipes","checkDoneRecipes","recipeId","find","recipe","id","handleFavorite","idDetails","favoriteRecipe","removeFromFavorite","checkFavorite","idDrink","strAlcoholic","strCategory","strDrink","strDrinkThumb","type","area","category","alcoholicOrNot","name","image","handleButtonName","cocktails","DetalhesBebida","pathname","setIdDetails","linkShared","setLinkShared","recomendations","setRecomendations","getIngredients","ingredients","Object","entries","filter","details","condition1","includes","condition2","measure","ingredientsArray","reduce","acc","curr","index","push","measuresArray","map","ingredient","measurament","quantity","fetchDetails","identification","results","fetchRecomendations","MAX_RECOMENDATION","splice","favorites","handleShare","strInstructions","shareImg","blackHeartImg","whiteHeartImg","food","idMeal","strMealThumb","strMeal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useParams, Link, useLocation } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport { getDrinkIdDetails, getFoods } from '../services';\nimport { AppContext } from '../context/AppContext';\nimport shareImg from '../images/shareIcon.svg';\nimport whiteHeartImg from '../images/whiteHeartIcon.svg';\nimport blackHeartImg from '../images/blackHeartIcon.svg';\n\nconst doneRecipes = JSON.parse(localStorage.getItem('doneRecipes')) || [];\nconst inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes')) || {};\n\nconst checkDoneRecipes = (recipeId) => {\n  if (doneRecipes.find((recipe) => recipe.id === recipeId)) {\n    return true;\n  }\n  return false;\n};\n\nconst handleFavorite = (idDetails, favoriteRecipe, removeFromFavorite, checkFavorite) => {\n  const { idDrink, strAlcoholic, strCategory, strDrink, strDrinkThumb } = idDetails;\n  if (!checkFavorite(idDrink)) {\n    favoriteRecipe({\n      id: idDrink,\n      type: 'bebida',\n      area: '',\n      category: strCategory,\n      alcoholicOrNot: strAlcoholic,\n      name: strDrink,\n      image: strDrinkThumb,\n    });\n  } else {\n    removeFromFavorite(idDrink);\n  }\n};\n\nconst handleButtonName = (id) => {\n  if (inProgressRecipes) {\n    if (inProgressRecipes.cocktails) {\n      return inProgressRecipes.cocktails[id] ? 'Continuar Receita' : 'Iniciar Receita';\n    }\n    return 'Iniciar Receita';\n  }\n};\n\nconst DetalhesBebida = () => {\n  const {\n    favoriteRecipe,\n    removeFromFavorite,\n  } = useContext(AppContext);\n  const { id } = useParams();\n  const { pathname } = useLocation();\n  const [idDetails, setIdDetails] = useState([]);\n  const [linkShared, setLinkShared] = useState(false);\n  const [recomendations, setRecomendations] = useState([]);\n\n  const getIngredients = () => {\n    const ingredients = Object.entries(idDetails).filter(\n      (details) => {\n        const condition1 = details[0].includes('Ingredient');\n        const condition2 = details[1] !== '' && details[1] !== null;\n        return condition1 && condition2;\n      },\n    );\n    const measure = Object.entries(idDetails).filter(\n      (details) => details[0].includes('Measure'),\n    );\n    const ingredientsArray = ingredients.reduce((acc, curr, index) => {\n      acc.push({ name: curr[1], index });\n      return acc;\n    }, []);\n    const measuresArray = measure.reduce((acc, curr, index) => {\n      acc.push({ measure: curr[1], index });\n      return acc;\n    }, []);\n\n    return ingredientsArray.map((ingredient) => {\n      const measurament = measuresArray\n        .filter((quantity) => ingredient.index === quantity.index);\n      return { name: ingredient.name, measure: measurament[0].measure };\n    });\n  };\n\n  const fetchDetails = async (identification) => {\n    const results = await getDrinkIdDetails(identification);\n    setIdDetails(results);\n  };\n\n  const fetchRecomendations = async () => {\n    const MAX_RECOMENDATION = 6;\n    const results = await getFoods();\n    setRecomendations(results.splice(0, MAX_RECOMENDATION));\n  };\n\n  const checkFavorite = (recipeId) => {\n    const favorites = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n    if (favorites.find((recipe) => recipe.id === recipeId)) return true;\n    return false;\n  };\n\n  const handleShare = () => {\n    copy(`http://localhost:3000${pathname}`);\n    setLinkShared(true);\n  };\n\n  useEffect(() => {\n    fetchDetails(id);\n    fetchRecomendations();\n  }, [id]);\n\n  if (!idDetails || !recomendations) return <p>Carregando...</p>;\n  const { strDrinkThumb, strDrink, strAlcoholic, strInstructions, idDrink } = idDetails;\n\n  return (\n    <div>\n      <img src={ strDrinkThumb } alt={ strDrink } data-testid=\"recipe-photo\" />\n      <h2 data-testid=\"recipe-title\">{strDrink}</h2>\n      <button type=\"button\" onClick={ () => handleShare() }>\n        <img data-testid=\"share-btn\" src={ shareImg } alt=\"Compartilhar\" />\n      </button>\n      { linkShared && <p>Link copiado!</p> }\n      <button\n        type=\"button\"\n        onClick={\n          () => (\n            handleFavorite(idDetails, favoriteRecipe, removeFromFavorite, checkFavorite))\n        }\n      >\n        <img\n          data-testid=\"favorite-btn\"\n          src={ checkFavorite(idDrink) ? blackHeartImg : whiteHeartImg }\n          alt=\"Favoritar\"\n        />\n      </button>\n      <p data-testid=\"recipe-category\">{strAlcoholic}</p>\n      { idDetails && getIngredients().map((ingredient, index) => (\n        <p data-testid={ `${index}-ingredient-name-and-measure` } key={ ingredient.name }>\n          {`${ingredient.name} ${ingredient.measure === null ? '' : ingredient.measure}`}\n        </p>\n      )) }\n      <p data-testid=\"instructions\">{strInstructions}</p>\n      <p>Comidas Recomendadas</p>\n      { recomendations.map((food, index) => (\n        <div data-testid={ `${index}-recomendation-card` } key={ food.idMeal }>\n          <img\n            data-testid={ `${index}-recomendation-img` }\n            src={ food.strMealThumb }\n            alt={ food.strMeal }\n            width=\"100px\"\n          />\n          <p data-testid={ `${index}-recomendation-title` }>{food.strMeal}</p>\n        </div>\n      )) }\n      { !checkDoneRecipes(idDrink) && (\n        <Link to={ `${id}/in-progress` }>\n          <button\n            type=\"button\"\n            data-testid=\"start-recipe-btn\"\n            className=\"start-recipe-btn\"\n          >\n            { handleButtonName(idDrink) }\n          </button>\n        </Link>\n      ) }\n    </div>\n  );\n};\n\nexport default DetalhesBebida;\n"]},"metadata":{},"sourceType":"module"}