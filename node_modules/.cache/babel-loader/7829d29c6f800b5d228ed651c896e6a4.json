{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Projects/sd-09-project-recipes-app/src/context/AppContext.js\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFoods, getDrinks, getFoodCategories, getDrinkCategories, getMealAreas, getMealIngredients, getDrinkIngredients } from '../services';\nexport const AppContext = createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  const [foodApiResults, setFoodApiResults] = useState([]);\n  const [drinksApiResults, setDrinksApiResults] = useState([]);\n  const [foodsArray, setFoodsArray] = useState([]);\n  const [drinksArray, setDrinksArray] = useState([]);\n  const [foodCategories, setFoodCategories] = useState([]);\n  const [drinkCategories, setDrinkCategories] = useState([]);\n  const [favoriteRecipes, setFavoriteRecipes] = useState(JSON.parse(localStorage.getItem('favoriteRecipes')) || []);\n  const [mealAreas, setMealAreas] = useState([]);\n  const [doneRecipes, setDoneRecipes] = useState(JSON.parse(localStorage.getItem('doneRecipes')) || []); // const [inProgressRecipes, setInProgressRecipes] = useState(\n  //   JSON.parse(localStorage.getItem('inProgressRecipes')) || {},\n  // );\n\n  const [mealIngredients, setMealIngredients] = useState([]);\n  const [drinkIngredients, setDrinkIngredients] = useState([]); // const [ingredientsUsed, setIngredientsUsed] = useState([]);\n  // teste\n\n  const [inProgressDrinks, setInProgressDrinks] = useState(JSON.parse(localStorage.getItem('inProgressDrinks')) || {});\n  const [inProgressMeals, setInProgressMeals] = useState(JSON.parse(localStorage.getItem('inProgressMeals')) || {});\n\n  const handleProgressDrink = (recipe, id) => {\n    setInProgressDrinks({ ...inProgressDrinks,\n      [id]: recipe\n    });\n  };\n\n  const handleProgressMeal = (recipe, id) => {\n    setInProgressMeals({ ...inProgressMeals,\n      [id]: recipe\n    });\n  };\n\n  useEffect(() => {\n    localStorage.setItem('inProgressDrinks', JSON.stringify(inProgressDrinks));\n  }, [inProgressDrinks]);\n  useEffect(() => {\n    localStorage.setItem('inProgressMeals', JSON.stringify(inProgressMeals));\n  }, [inProgressMeals]); // // fim do teste\n  // const handleProgressRecipes = (type, id) => {\n  //   setInProgressRecipes({\n  //     ...inProgressRecipes,\n  //     [type]: { [id]: ingredientsUsed },\n  //   });\n  // };\n  // const handleIngredientsUsed = (ingredient) => {\n  //   setIngredientsUsed([\n  //     ...ingredientsUsed,\n  //     ingredient,\n  //   ]);\n  // };\n\n  const fetchFoods = async () => {\n    const response = await getFoods();\n    setFoodsArray(response);\n  };\n\n  const fetchDrinks = async () => {\n    const response = await getDrinks();\n    setDrinksArray(response);\n  };\n\n  const fetchFoodCategories = async () => {\n    const response = await getFoodCategories();\n    setFoodCategories(response);\n  };\n\n  const fetchDrinkCategories = async () => {\n    const response = await getDrinkCategories();\n    setDrinkCategories(response);\n  };\n\n  const fetchMealAreas = async () => {\n    const response = await getMealAreas();\n    setMealAreas(response);\n  };\n\n  const fetchMealIngredients = async () => {\n    const response = await getMealIngredients();\n    setMealIngredients(response);\n  };\n\n  const fetchDrinkIngredients = async () => {\n    const response = await getDrinkIngredients();\n    setDrinkIngredients(response);\n  };\n\n  const favoriteRecipe = meal => {\n    setFavoriteRecipes([...favoriteRecipes, meal]);\n  };\n\n  const removeFromFavorite = id => {\n    setFavoriteRecipes(favoriteRecipes.filter(recipe => recipe.id !== id));\n  };\n\n  const finishRecipe = recipe => {\n    setDoneRecipes([...doneRecipes, recipe]);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('doneRecipes', JSON.stringify(doneRecipes));\n  }, [doneRecipes]);\n  useEffect(() => {\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes)); // setXablau(Math.random());\n  }, [favoriteRecipes]); // useEffect(() => {\n  //   localStorage.setItem(\n  //     'inProgressRecipes',\n  //     JSON.stringify(inProgressRecipes),\n  //   );\n  // }, [inProgressRecipes]);\n\n  useEffect(() => {\n    fetchFoods();\n    fetchDrinks();\n    fetchFoodCategories();\n    fetchDrinkCategories();\n    fetchMealAreas();\n    fetchMealIngredients();\n    fetchDrinkIngredients();\n  }, []);\n  const foods = foodApiResults.length && foodApiResults !== 'null' ? foodApiResults : foodsArray;\n  const drinks = drinksApiResults.length && drinksApiResults !== 'null' ? drinksApiResults : drinksArray;\n  const context = {\n    foods,\n    drinks,\n    foodCategories,\n    drinkCategories,\n    favoriteRecipes,\n    mealAreas,\n    mealIngredients,\n    drinkIngredients,\n    doneRecipes,\n    inProgressRecipes,\n    inProgressDrinks,\n    inProgressMeals,\n    // xablau,\n    setFoodApiResults,\n    setDrinksApiResults,\n    favoriteRecipe,\n    removeFromFavorite,\n    finishRecipe,\n    handleProgressRecipes,\n    handleIngredientsUsed,\n    handleProgressMeal,\n    handleProgressDrink\n  };\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nAppProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default AppProvider;","map":{"version":3,"sources":["/home/administrador/Projects/sd-09-project-recipes-app/src/context/AppContext.js"],"names":["React","createContext","useState","useEffect","PropTypes","getFoods","getDrinks","getFoodCategories","getDrinkCategories","getMealAreas","getMealIngredients","getDrinkIngredients","AppContext","AppProvider","children","foodApiResults","setFoodApiResults","drinksApiResults","setDrinksApiResults","foodsArray","setFoodsArray","drinksArray","setDrinksArray","foodCategories","setFoodCategories","drinkCategories","setDrinkCategories","favoriteRecipes","setFavoriteRecipes","JSON","parse","localStorage","getItem","mealAreas","setMealAreas","doneRecipes","setDoneRecipes","mealIngredients","setMealIngredients","drinkIngredients","setDrinkIngredients","inProgressDrinks","setInProgressDrinks","inProgressMeals","setInProgressMeals","handleProgressDrink","recipe","id","handleProgressMeal","setItem","stringify","fetchFoods","response","fetchDrinks","fetchFoodCategories","fetchDrinkCategories","fetchMealAreas","fetchMealIngredients","fetchDrinkIngredients","favoriteRecipe","meal","removeFromFavorite","filter","finishRecipe","foods","length","drinks","context","inProgressRecipes","handleProgressRecipes","handleIngredientsUsed","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,QADF,EAEEC,SAFF,EAGEC,iBAHF,EAIEC,kBAJF,EAIsBC,YAJtB,EAIoCC,kBAJpC,EAIwDC,mBAJxD,QAKO,aALP;AAOA,OAAO,MAAMC,UAAU,GAAGX,aAAa,EAAhC;;AAEP,MAAMY,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACe,gBAAD,EAAmBC,mBAAnB,IAA0ChB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACqB,cAAD,EAAiBC,iBAAjB,IAAsCtB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACuB,eAAD,EAAkBC,kBAAlB,IAAwCxB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACyB,eAAD,EAAkBC,kBAAlB,IAAwC1B,QAAQ,CACpD2B,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,KAAuD,EADH,CAAtD;AAGA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACiC,WAAD,EAAcC,cAAd,IAAgClC,QAAQ,CAC5C2B,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,KAAmD,EADP,CAA9C,CAXoC,CAepC;AACA;AACA;;AACA,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCpC,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACqC,gBAAD,EAAmBC,mBAAnB,IAA0CtC,QAAQ,CAAC,EAAD,CAAxD,CAnBoC,CAoBpC;AAEA;;AAEA,QAAM,CAACuC,gBAAD,EAAmBC,mBAAnB,IAA0CxC,QAAQ,CACtD2B,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAAX,KAAwD,EADF,CAAxD;AAGA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwC1C,QAAQ,CACpD2B,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,KAAuD,EADH,CAAtD;;AAIA,QAAMa,mBAAmB,GAAG,CAACC,MAAD,EAASC,EAAT,KAAgB;AAC1CL,IAAAA,mBAAmB,CAAC,EAClB,GAAGD,gBADe;AAElB,OAACM,EAAD,GAAMD;AAFY,KAAD,CAAnB;AAID,GALD;;AAMA,QAAME,kBAAkB,GAAG,CAACF,MAAD,EAASC,EAAT,KAAgB;AACzCH,IAAAA,kBAAkB,CAAC,EACjB,GAAGD,eADc;AAEjB,OAACI,EAAD,GAAMD;AAFW,KAAD,CAAlB;AAID,GALD;;AAOA3C,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,YAAY,CAACkB,OAAb,CAAqB,kBAArB,EAAyCpB,IAAI,CAACqB,SAAL,CAAeT,gBAAf,CAAzC;AACD,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;AAIAtC,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,YAAY,CAACkB,OAAb,CAAqB,iBAArB,EAAwCpB,IAAI,CAACqB,SAAL,CAAeP,eAAf,CAAxC;AACD,GAFQ,EAEN,CAACA,eAAD,CAFM,CAAT,CAhDoC,CAoDpC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMQ,UAAU,GAAG,YAAY;AAC7B,UAAMC,QAAQ,GAAG,MAAM/C,QAAQ,EAA/B;AACAe,IAAAA,aAAa,CAACgC,QAAD,CAAb;AACD,GAHD;;AAKA,QAAMC,WAAW,GAAG,YAAY;AAC9B,UAAMD,QAAQ,GAAG,MAAM9C,SAAS,EAAhC;AACAgB,IAAAA,cAAc,CAAC8B,QAAD,CAAd;AACD,GAHD;;AAKA,QAAME,mBAAmB,GAAG,YAAY;AACtC,UAAMF,QAAQ,GAAG,MAAM7C,iBAAiB,EAAxC;AACAiB,IAAAA,iBAAiB,CAAC4B,QAAD,CAAjB;AACD,GAHD;;AAKA,QAAMG,oBAAoB,GAAG,YAAY;AACvC,UAAMH,QAAQ,GAAG,MAAM5C,kBAAkB,EAAzC;AACAkB,IAAAA,kBAAkB,CAAC0B,QAAD,CAAlB;AACD,GAHD;;AAKA,QAAMI,cAAc,GAAG,YAAY;AACjC,UAAMJ,QAAQ,GAAG,MAAM3C,YAAY,EAAnC;AACAyB,IAAAA,YAAY,CAACkB,QAAD,CAAZ;AACD,GAHD;;AAKA,QAAMK,oBAAoB,GAAG,YAAY;AACvC,UAAML,QAAQ,GAAG,MAAM1C,kBAAkB,EAAzC;AACA4B,IAAAA,kBAAkB,CAACc,QAAD,CAAlB;AACD,GAHD;;AAKA,QAAMM,qBAAqB,GAAG,YAAY;AACxC,UAAMN,QAAQ,GAAG,MAAMzC,mBAAmB,EAA1C;AACA6B,IAAAA,mBAAmB,CAACY,QAAD,CAAnB;AACD,GAHD;;AAKA,QAAMO,cAAc,GAAIC,IAAD,IAAU;AAC/BhC,IAAAA,kBAAkB,CAAC,CACjB,GAAGD,eADc,EAEjBiC,IAFiB,CAAD,CAAlB;AAID,GALD;;AAOA,QAAMC,kBAAkB,GAAId,EAAD,IAAQ;AACjCnB,IAAAA,kBAAkB,CAACD,eAAe,CAACmC,MAAhB,CAAwBhB,MAAD,IAAYA,MAAM,CAACC,EAAP,KAAcA,EAAjD,CAAD,CAAlB;AACD,GAFD;;AAIA,QAAMgB,YAAY,GAAIjB,MAAD,IAAY;AAC/BV,IAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiBW,MAAjB,CAAD,CAAd;AACD,GAFD;;AAIA3C,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,YAAY,CAACkB,OAAb,CAAqB,aAArB,EAAoCpB,IAAI,CAACqB,SAAL,CAAef,WAAf,CAApC;AACD,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAIAhC,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,YAAY,CAACkB,OAAb,CAAqB,iBAArB,EAAwCpB,IAAI,CAACqB,SAAL,CAAevB,eAAf,CAAxC,EADc,CAEd;AACD,GAHQ,EAGN,CAACA,eAAD,CAHM,CAAT,CAzHoC,CA8HpC;AACA;AACA;AACA;AACA;AACA;;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACdgD,IAAAA,UAAU;AACVE,IAAAA,WAAW;AACXC,IAAAA,mBAAmB;AACnBC,IAAAA,oBAAoB;AACpBC,IAAAA,cAAc;AACdC,IAAAA,oBAAoB;AACpBC,IAAAA,qBAAqB;AACtB,GARQ,EAQN,EARM,CAAT;AAUA,QAAMM,KAAK,GAAGjD,cAAc,CAACkD,MAAf,IAAyBlD,cAAc,KAAK,MAA5C,GACVA,cADU,GACOI,UADrB;AAEA,QAAM+C,MAAM,GAAGjD,gBAAgB,CAACgD,MAAjB,IAA2BhD,gBAAgB,KAAK,MAAhD,GACXA,gBADW,GACQI,WADvB;AAGA,QAAM8C,OAAO,GAAG;AACdH,IAAAA,KADc;AAEdE,IAAAA,MAFc;AAGd3C,IAAAA,cAHc;AAIdE,IAAAA,eAJc;AAKdE,IAAAA,eALc;AAMdM,IAAAA,SANc;AAOdI,IAAAA,eAPc;AAQdE,IAAAA,gBARc;AASdJ,IAAAA,WATc;AAUdiC,IAAAA,iBAVc;AAWd3B,IAAAA,gBAXc;AAYdE,IAAAA,eAZc;AAad;AACA3B,IAAAA,iBAdc;AAedE,IAAAA,mBAfc;AAgBdyC,IAAAA,cAhBc;AAiBdE,IAAAA,kBAjBc;AAkBdE,IAAAA,YAlBc;AAmBdM,IAAAA,qBAnBc;AAoBdC,IAAAA,qBApBc;AAqBdtB,IAAAA,kBArBc;AAsBdH,IAAAA;AAtBc,GAAhB;AAwBA,sBACE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAGsB,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIrD,QADJ,CADF;AAKD,CAjLD;;AAmLAD,WAAW,CAAC0D,SAAZ,GAAwB;AACtBzD,EAAAA,QAAQ,EAAEV,SAAS,CAACoE,IAAV,CAAeC;AADH,CAAxB;AAIA,eAAe5D,WAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  getFoods,\n  getDrinks,\n  getFoodCategories,\n  getDrinkCategories, getMealAreas, getMealIngredients, getDrinkIngredients,\n} from '../services';\n\nexport const AppContext = createContext();\n\nconst AppProvider = ({ children }) => {\n  const [foodApiResults, setFoodApiResults] = useState([]);\n  const [drinksApiResults, setDrinksApiResults] = useState([]);\n  const [foodsArray, setFoodsArray] = useState([]);\n  const [drinksArray, setDrinksArray] = useState([]);\n  const [foodCategories, setFoodCategories] = useState([]);\n  const [drinkCategories, setDrinkCategories] = useState([]);\n  const [favoriteRecipes, setFavoriteRecipes] = useState(\n    JSON.parse(localStorage.getItem('favoriteRecipes')) || [],\n  );\n  const [mealAreas, setMealAreas] = useState([]);\n  const [doneRecipes, setDoneRecipes] = useState(\n    JSON.parse(localStorage.getItem('doneRecipes')) || [],\n  );\n\n  // const [inProgressRecipes, setInProgressRecipes] = useState(\n  //   JSON.parse(localStorage.getItem('inProgressRecipes')) || {},\n  // );\n  const [mealIngredients, setMealIngredients] = useState([]);\n  const [drinkIngredients, setDrinkIngredients] = useState([]);\n  // const [ingredientsUsed, setIngredientsUsed] = useState([]);\n\n  // teste\n\n  const [inProgressDrinks, setInProgressDrinks] = useState(\n    JSON.parse(localStorage.getItem('inProgressDrinks')) || {},\n  );\n  const [inProgressMeals, setInProgressMeals] = useState(\n    JSON.parse(localStorage.getItem('inProgressMeals')) || {},\n  );\n\n  const handleProgressDrink = (recipe, id) => {\n    setInProgressDrinks({\n      ...inProgressDrinks,\n      [id]: recipe,\n    });\n  };\n  const handleProgressMeal = (recipe, id) => {\n    setInProgressMeals({\n      ...inProgressMeals,\n      [id]: recipe,\n    });\n  };\n\n  useEffect(() => {\n    localStorage.setItem('inProgressDrinks', JSON.stringify(inProgressDrinks));\n  }, [inProgressDrinks]);\n\n  useEffect(() => {\n    localStorage.setItem('inProgressMeals', JSON.stringify(inProgressMeals));\n  }, [inProgressMeals]);\n\n  // // fim do teste\n  // const handleProgressRecipes = (type, id) => {\n  //   setInProgressRecipes({\n  //     ...inProgressRecipes,\n  //     [type]: { [id]: ingredientsUsed },\n  //   });\n  // };\n\n  // const handleIngredientsUsed = (ingredient) => {\n  //   setIngredientsUsed([\n  //     ...ingredientsUsed,\n  //     ingredient,\n  //   ]);\n  // };\n\n  const fetchFoods = async () => {\n    const response = await getFoods();\n    setFoodsArray(response);\n  };\n\n  const fetchDrinks = async () => {\n    const response = await getDrinks();\n    setDrinksArray(response);\n  };\n\n  const fetchFoodCategories = async () => {\n    const response = await getFoodCategories();\n    setFoodCategories(response);\n  };\n\n  const fetchDrinkCategories = async () => {\n    const response = await getDrinkCategories();\n    setDrinkCategories(response);\n  };\n\n  const fetchMealAreas = async () => {\n    const response = await getMealAreas();\n    setMealAreas(response);\n  };\n\n  const fetchMealIngredients = async () => {\n    const response = await getMealIngredients();\n    setMealIngredients(response);\n  };\n\n  const fetchDrinkIngredients = async () => {\n    const response = await getDrinkIngredients();\n    setDrinkIngredients(response);\n  };\n\n  const favoriteRecipe = (meal) => {\n    setFavoriteRecipes([\n      ...favoriteRecipes,\n      meal,\n    ]);\n  };\n\n  const removeFromFavorite = (id) => {\n    setFavoriteRecipes(favoriteRecipes.filter((recipe) => recipe.id !== id));\n  };\n\n  const finishRecipe = (recipe) => {\n    setDoneRecipes([...doneRecipes, recipe]);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('doneRecipes', JSON.stringify(doneRecipes));\n  }, [doneRecipes]);\n\n  useEffect(() => {\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n    // setXablau(Math.random());\n  }, [favoriteRecipes]);\n\n  // useEffect(() => {\n  //   localStorage.setItem(\n  //     'inProgressRecipes',\n  //     JSON.stringify(inProgressRecipes),\n  //   );\n  // }, [inProgressRecipes]);\n\n  useEffect(() => {\n    fetchFoods();\n    fetchDrinks();\n    fetchFoodCategories();\n    fetchDrinkCategories();\n    fetchMealAreas();\n    fetchMealIngredients();\n    fetchDrinkIngredients();\n  }, []);\n\n  const foods = foodApiResults.length && foodApiResults !== 'null'\n    ? foodApiResults : foodsArray;\n  const drinks = drinksApiResults.length && drinksApiResults !== 'null'\n    ? drinksApiResults : drinksArray;\n\n  const context = {\n    foods,\n    drinks,\n    foodCategories,\n    drinkCategories,\n    favoriteRecipes,\n    mealAreas,\n    mealIngredients,\n    drinkIngredients,\n    doneRecipes,\n    inProgressRecipes,\n    inProgressDrinks,\n    inProgressMeals,\n    // xablau,\n    setFoodApiResults,\n    setDrinksApiResults,\n    favoriteRecipe,\n    removeFromFavorite,\n    finishRecipe,\n    handleProgressRecipes,\n    handleIngredientsUsed,\n    handleProgressMeal,\n    handleProgressDrink,\n  };\n  return (\n    <AppContext.Provider value={ context }>\n      { children }\n    </AppContext.Provider>\n  );\n};\n\nAppProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default AppProvider;\n"]},"metadata":{},"sourceType":"module"}